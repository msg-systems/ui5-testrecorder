<?xml version="1.0" encoding="UTF-8" ?>
<Library name="sap.m" xmlns="http://www.sap.com/ui5/ide/templates/xmlview">
<Template name="sap.m.ActionListItem" alias="ActionListItem,Item">
	<jsTemplate><![CDATA[new sap.m.ActionListItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	text: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ActionListItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	text=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ActionListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ActionSelect" alias="ActionSelect,Select">
	<jsTemplate><![CDATA[new sap.m.ActionSelect({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	name: "", // string
	enabled: true, // boolean
	width: "auto", // sap.ui.core.CSSSize
	maxWidth: "100%", // sap.ui.core.CSSSize
	selectedKey: "", // string, since 1.11
	selectedItemId: "", // string, since 1.12
	icon: "", // sap.ui.core.URI, since 1.16
	type: sap.m.SelectType.Default, // sap.m.SelectType, since 1.16
	autoAdjustWidth: false, // boolean, since 1.16
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.28
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.40.2
	valueStateText: "", // string, since 1.40.5
	showSecondaryValues: false, // boolean, since 1.40
	forceSelection: true, // boolean, since 1.34
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	buttons: [], // sap.m.Button
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ActionSelect xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	name=""
	enabled="true"
	width="auto"
	maxWidth="100%"
	selectedKey=""
	selectedItemId=""
	icon=""
	type="Default"
	autoAdjustWidth="false"
	textAlign="Initial"
	textDirection="Inherit"
	valueState="None"
	valueStateText=""
	showSecondaryValues="false"
	forceSelection="true"
	selectedItem=""
	ariaLabelledBy=""
	buttons=""
	validateFieldGroup=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Item -->
</ActionSelect>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ActionSheet" alias="ActionSheet,Sheet">
	<jsTemplate><![CDATA[new sap.m.ActionSheet({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	placement: sap.m.PlacementType.Bottom, // sap.m.PlacementType
	showCancelButton: true, // boolean
	cancelButtonText: undefined, // string
	title: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	buttons: [], // sap.m.Button
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	cancelButtonTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	cancelButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ActionSheet xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	placement="Bottom"
	showCancelButton="true"
	cancelButtonText=""
	title=""
	validateFieldGroup=""
	cancelButtonTap=""
	beforeOpen=""
	afterOpen=""
	beforeClose=""
	afterClose=""
	cancelButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<buttons></buttons> <!-- sap.m.Button -->
</ActionSheet>
]]></xmlTemplate>
</Template>
<Template name="sap.m.App" alias="App">
	<jsTemplate><![CDATA[new sap.m.App({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	autoFocus: true, // boolean, since 1.30
	height: "100%", // sap.ui.core.CSSSize
	width: "100%", // sap.ui.core.CSSSize
	visible: true, // boolean
	defaultTransitionName: "slide", // string, since 1.7.1
	homeIcon: undefined, // any
	backgroundColor: undefined, // string, since 1.11.2
	backgroundImage: undefined, // sap.ui.core.URI, since 1.11.2
	backgroundRepeat: false, // boolean, since 1.11.2
	backgroundOpacity: 1, // float, since 1.11.2
	mobileWebAppCapable: true, // boolean, since 1.58.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	pages: [], // sap.ui.core.Control
	initialPage: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.7.1
	afterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.7.1
	orientationChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<App xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	autoFocus="true"
	height="100%"
	width="100%"
	visible="true"
	defaultTransitionName="slide"
	homeIcon=""
	backgroundColor=""
	backgroundImage=""
	backgroundRepeat="false"
	backgroundOpacity="1"
	mobileWebAppCapable="true"
	initialPage=""
	validateFieldGroup=""
	navigate=""
	afterNavigate=""
	orientationChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<pages></pages> <!-- sap.ui.core.Control -->
</App>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Bar" alias="Bar">
	<jsTemplate><![CDATA[new sap.m.Bar({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	enableFlexBox: false, // boolean
	translucent: false, // boolean, since 1.12
	design: sap.m.BarDesign.Auto, // sap.m.BarDesign, since 1.22
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	contentLeft: [], // sap.ui.core.Control
	contentMiddle: [], // sap.ui.core.Control
	contentRight: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Bar xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	enableFlexBox="false"
	translucent="false"
	design="Auto"
	ariaLabelledBy=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<contentLeft></contentLeft> <!-- sap.ui.core.Control -->
		<contentMiddle></contentMiddle> <!-- sap.ui.core.Control -->
		<contentRight></contentRight> <!-- sap.ui.core.Control -->
</Bar>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Breadcrumbs" alias="Breadcrumbs">
	<jsTemplate><![CDATA[new sap.m.Breadcrumbs({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	currentLocationText: undefined, // string, since 1.34
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	links: [], // sap.m.Link, since 1.34
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Breadcrumbs xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	currentLocationText=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<links></links> <!-- sap.m.Link, since 1.34 -->
</Breadcrumbs>
]]></xmlTemplate>
</Template>
<Template name="sap.m.BusyDialog" alias="BusyDialog,Dialog">
	<jsTemplate><![CDATA[new sap.m.BusyDialog({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: "", // string
	title: "", // string
	customIcon: "", // sap.ui.core.URI
	customIconRotationSpeed: 1000, // int
	customIconDensityAware: true, // boolean
	customIconWidth: "44px", // sap.ui.core.CSSSize
	customIconHeight: "44px", // sap.ui.core.CSSSize
	cancelButtonText: "", // string
	showCancelButton: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	close: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<BusyDialog xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	title=""
	customIcon=""
	customIconRotationSpeed="1000"
	customIconDensityAware="true"
	customIconWidth="44px"
	customIconHeight="44px"
	cancelButtonText=""
	showCancelButton="false"
	ariaLabelledBy=""
	validateFieldGroup=""
	close="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</BusyDialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.BusyIndicator" alias="BusyIndicator,Indicator">
	<jsTemplate><![CDATA[new sap.m.BusyIndicator({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: "", // string
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	customIcon: "", // sap.ui.core.URI
	customIconRotationSpeed: 1000, // int
	customIconDensityAware: true, // boolean
	customIconWidth: "44px", // sap.ui.core.CSSSize
	customIconHeight: "44px", // sap.ui.core.CSSSize
	size: "1rem", // sap.ui.core.CSSSize
	design: "auto", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<BusyIndicator xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	textDirection="Inherit"
	customIcon=""
	customIconRotationSpeed="1000"
	customIconDensityAware="true"
	customIconWidth="44px"
	customIconHeight="44px"
	size="1rem"
	design="auto"
	ariaLabelledBy=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</BusyIndicator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Button" alias="Button">
	<jsTemplate><![CDATA[new sap.m.Button({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: undefined, // string
	type: sap.m.ButtonType.Default, // sap.m.ButtonType
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	icon: undefined, // sap.ui.core.URI
	iconFirst: true, // boolean
	activeIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Button xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	type="Default"
	width=""
	enabled="true"
	icon=""
	iconFirst="true"
	activeIcon=""
	iconDensityAware="true"
	textDirection="Inherit"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</Button>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Carousel" alias="Carousel">
	<jsTemplate><![CDATA[new sap.m.Carousel({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	height: "100%", // sap.ui.core.CSSSize
	width: "100%", // sap.ui.core.CSSSize
	loop: false, // boolean
	showPageIndicator: true, // boolean
	pageIndicatorPlacement: sap.m.PlacementType.Bottom, // sap.m.PlacementType
	showBusyIndicator: true, // boolean
	arrowsPlacement: sap.m.CarouselArrowsPlacement.Content, // sap.m.CarouselArrowsPlacement
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	pages: [], // sap.ui.core.Control
	activePage: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	loadPage: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	unloadPage: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	pageChanged: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Carousel xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	height="100%"
	width="100%"
	loop="false"
	showPageIndicator="true"
	pageIndicatorPlacement="Bottom"
	showBusyIndicator="true"
	arrowsPlacement="Content"
	activePage=""
	validateFieldGroup=""
	loadPage=""
	unloadPage=""
	pageChanged="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<pages></pages> <!-- sap.ui.core.Control -->
</Carousel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.CheckBox" alias="CheckBox,Box">
	<jsTemplate><![CDATA[new sap.m.CheckBox({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	selected: false, // boolean
	partiallySelected: false, // boolean, since 1.58
	enabled: true, // boolean
	name: undefined, // string
	text: undefined, // string
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	textAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	width: "", // sap.ui.core.CSSSize
	useEntireWidth: false, // boolean, since 1.52
	activeHandling: true, // boolean
	editable: true, // boolean, since 1.25
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.38
	displayOnly: false, // boolean, since 1.54
	wrapping: false, // boolean, since 1.54
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<CheckBox xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	selected="false"
	partiallySelected="false"
	enabled="true"
	name=""
	text=""
	textDirection="Inherit"
	textAlign="Begin"
	width=""
	useEntireWidth="false"
	activeHandling="true"
	editable="true"
	valueState="None"
	displayOnly="false"
	wrapping="false"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	select="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</CheckBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ColorPalette" alias="ColorPalette,Palette">
	<jsTemplate><![CDATA[new sap.m.ColorPalette({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	colors: [], // sap.ui.core.CSSColor[]
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	colorSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ColorPalette xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	colors=""
	validateFieldGroup=""
	colorSelect="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ColorPalette>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ColorPalettePopover" alias="ColorPalettePopover,Popover">
	<jsTemplate><![CDATA[new sap.m.ColorPalettePopover({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	defaultColor: undefined, // sap.ui.core.CSSColor
	colors: [], // sap.ui.core.CSSColor[]
	showDefaultColorButton: true, // boolean
	showMoreColorsButton: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	colorSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ColorPalettePopover xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	defaultColor=""
	colors=""
	showDefaultColorButton="true"
	showMoreColorsButton="true"
	validateFieldGroup=""
	colorSelect="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ColorPalettePopover>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Column" alias="Column">
	<jsTemplate><![CDATA[new sap.m.Column({
	id: "${id}", // sap.ui.core.ID
	width: undefined, // sap.ui.core.CSSSize
	hAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	vAlign: sap.ui.core.VerticalAlign.Inherit, // sap.ui.core.VerticalAlign
	styleClass: undefined, // string
	visible: true, // boolean
	minScreenWidth: undefined, // string
	demandPopin: false, // boolean
	popinHAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	popinDisplay: sap.m.PopinDisplay.Block, // sap.m.PopinDisplay, since 1.13.2
	mergeDuplicates: false, // boolean, since 1.16
	mergeFunctionName: "getText", // string, since 1.16
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	header: undefined, // sap.ui.core.Control
	footer: undefined // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Column xmlns="sap.m"
	id="${id}"
	width=""
	hAlign="Begin"
	vAlign="Inherit"
	styleClass=""
	visible="true"
	minScreenWidth=""
	demandPopin="false"
	popinHAlign="Begin"
	popinDisplay="Block"
	mergeDuplicates="false"
	mergeFunctionName="getText">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<header></header> <!-- sap.ui.core.Control -->
		<footer></footer> <!-- sap.ui.core.Control -->
</Column>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ColumnListItem" alias="ColumnListItem,Item">
	<jsTemplate><![CDATA[new sap.m.ColumnListItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	vAlign: sap.ui.core.VerticalAlign.Inherit, // sap.ui.core.VerticalAlign, since 1.20
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	cells: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ColumnListItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	vAlign="Inherit"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<cells></cells> <!-- sap.ui.core.Control -->
</ColumnListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ComboBox" alias="ComboBox,Box">
	<jsTemplate><![CDATA[new sap.m.ComboBox({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	maxWidth: "100%", // sap.ui.core.CSSSize
	showButton: true, // boolean, since 1.38
	selectedKey: "", // string
	selectedItemId: "", // string
	showSecondaryValues: false, // boolean, since 1.32.3
	filterSecondaryValues: false, // boolean, since 1.46
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	selectedItem: undefined, // sap.ui.core.Item
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	loadItems: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.38
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ComboBox xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	maxWidth="100%"
	showButton="true"
	selectedKey=""
	selectedItemId=""
	showSecondaryValues="false"
	filterSecondaryValues="false"
	ariaLabelledBy=""
	selectedItem=""
	validateFieldGroup=""
	change=""
	loadItems=""
	change=""
	selectionChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Item -->
</ComboBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ComboBoxBase" alias="ComboBoxBase,Base">
	<jsTemplate><![CDATA[new sap.m.ComboBoxBase({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	maxWidth: "100%", // sap.ui.core.CSSSize
	showButton: true, // boolean, since 1.38
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	loadItems: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.38
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ComboBoxBase xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	maxWidth="100%"
	showButton="true"
	ariaLabelledBy=""
	validateFieldGroup=""
	change=""
	loadItems="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Item -->
</ComboBoxBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ComboBoxTextField" alias="ComboBoxTextField,Field">
	<jsTemplate><![CDATA[new sap.m.ComboBoxTextField({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	maxWidth: "100%", // sap.ui.core.CSSSize
	showButton: true, // boolean, since 1.38
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ComboBoxTextField xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	maxWidth="100%"
	showButton="true"
	ariaLabelledBy=""
	validateFieldGroup=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ComboBoxTextField>
]]></xmlTemplate>
</Template>
<Template name="sap.m.CustomListItem" alias="CustomListItem,Item">
	<jsTemplate><![CDATA[new sap.m.CustomListItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<CustomListItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</CustomListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.CustomTile" alias="CustomTile,Tile">
	<jsTemplate><![CDATA[new sap.m.CustomTile({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	removable: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<CustomTile xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	removable="true"
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</CustomTile>
]]></xmlTemplate>
</Template>
<Template name="sap.m.CustomTreeItem" alias="CustomTreeItem,Item">
	<jsTemplate><![CDATA[new sap.m.CustomTreeItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<CustomTreeItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</CustomTreeItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DatePicker" alias="DatePicker,Picker">
	<jsTemplate><![CDATA[new sap.m.DatePicker({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	displayFormat: undefined, // string
	valueFormat: undefined, // string
	dateValue: undefined, // object
	initialFocusedDateValue: undefined, // object, since 1.54
	displayFormatType: "", // string, since 1.28.6
	secondaryCalendarType: undefined, // sap.ui.core.CalendarType, since 1.34.1
	minDate: undefined, // object, since 1.38.0
	maxDate: undefined, // object, since 1.38.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	specialDates: [], // sap.ui.core.Element, since 1.38.5
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	legend: undefined, // sap.ui.core.Control, since 1.38.5
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.46.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DatePicker xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	displayFormat=""
	valueFormat=""
	dateValue=""
	initialFocusedDateValue=""
	displayFormatType=""
	secondaryCalendarType=""
	minDate=""
	maxDate=""
	ariaLabelledBy=""
	legend=""
	validateFieldGroup=""
	change=""
	navigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<specialDates></specialDates> <!-- sap.ui.core.Element, since 1.38.5 -->
</DatePicker>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DateRangeSelection" alias="DateRangeSelection,Selection">
	<jsTemplate><![CDATA[new sap.m.DateRangeSelection({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	displayFormat: undefined, // string
	valueFormat: undefined, // string
	dateValue: undefined, // object
	initialFocusedDateValue: undefined, // object, since 1.54
	displayFormatType: "", // string, since 1.28.6
	secondaryCalendarType: undefined, // sap.ui.core.CalendarType, since 1.34.1
	minDate: undefined, // object, since 1.38.0
	maxDate: undefined, // object, since 1.38.0
	delimiter: "-", // string
	secondDateValue: undefined, // object
	from: undefined, // object
	to: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	specialDates: [], // sap.ui.core.Element, since 1.38.5
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	legend: undefined, // sap.ui.core.Control, since 1.38.5
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.46.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DateRangeSelection xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	displayFormat=""
	valueFormat=""
	dateValue=""
	initialFocusedDateValue=""
	displayFormatType=""
	secondaryCalendarType=""
	minDate=""
	maxDate=""
	delimiter="-"
	secondDateValue=""
	from=""
	to=""
	ariaLabelledBy=""
	legend=""
	validateFieldGroup=""
	change=""
	navigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<specialDates></specialDates> <!-- sap.ui.core.Element, since 1.38.5 -->
</DateRangeSelection>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DateTimeField" alias="DateTimeField,Field">
	<jsTemplate><![CDATA[new sap.m.DateTimeField({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	displayFormat: undefined, // string
	valueFormat: undefined, // string
	dateValue: undefined, // object
	initialFocusedDateValue: undefined, // object, since 1.54
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DateTimeField xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	displayFormat=""
	valueFormat=""
	dateValue=""
	initialFocusedDateValue=""
	ariaLabelledBy=""
	validateFieldGroup=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</DateTimeField>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DateTimeInput" alias="DateTimeInput,Input">
	<jsTemplate><![CDATA[new sap.m.DateTimeInput({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: "100%", // sap.ui.core.CSSSize
	enabled: true, // boolean
	editable: true, // boolean, since 1.12.0
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	name: undefined, // string
	placeholder: undefined, // string
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	type: sap.m.DateTimeInputType.Date, // sap.m.DateTimeInputType
	displayFormat: undefined, // string
	valueFormat: undefined, // string
	dateValue: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DateTimeInput xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width="100%"
	enabled="true"
	editable="true"
	valueState="None"
	valueStateText=""
	showValueStateMessage="true"
	name=""
	placeholder=""
	textAlign="Initial"
	textDirection="Inherit"
	type="Date"
	displayFormat=""
	valueFormat=""
	dateValue=""
	ariaLabelledBy=""
	validateFieldGroup=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</DateTimeInput>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DateTimePicker" alias="DateTimePicker,Picker">
	<jsTemplate><![CDATA[new sap.m.DateTimePicker({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	displayFormat: undefined, // string
	valueFormat: undefined, // string
	dateValue: undefined, // object
	initialFocusedDateValue: undefined, // object, since 1.54
	displayFormatType: "", // string, since 1.28.6
	secondaryCalendarType: undefined, // sap.ui.core.CalendarType, since 1.34.1
	minDate: undefined, // object, since 1.38.0
	maxDate: undefined, // object, since 1.38.0
	minutesStep: 1, // int, since 1.56
	secondsStep: 1, // int, since 1.56
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	specialDates: [], // sap.ui.core.Element, since 1.38.5
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	legend: undefined, // sap.ui.core.Control, since 1.38.5
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.46.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DateTimePicker xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	displayFormat=""
	valueFormat=""
	dateValue=""
	initialFocusedDateValue=""
	displayFormatType=""
	secondaryCalendarType=""
	minDate=""
	maxDate=""
	minutesStep="1"
	secondsStep="1"
	ariaLabelledBy=""
	legend=""
	validateFieldGroup=""
	change=""
	navigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<specialDates></specialDates> <!-- sap.ui.core.Element, since 1.38.5 -->
</DateTimePicker>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Dialog" alias="Dialog">
	<jsTemplate><![CDATA[new sap.m.Dialog({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	icon: undefined, // sap.ui.core.URI
	title: undefined, // string
	showHeader: true, // boolean, since 1.15.1
	type: sap.m.DialogType.Standard, // sap.m.DialogType
	state: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.11.2
	stretchOnPhone: false, // boolean, since 1.11.2
	stretch: false, // boolean, since 1.13.1
	contentWidth: undefined, // sap.ui.core.CSSSize, since 1.12.1
	contentHeight: undefined, // sap.ui.core.CSSSize, since 1.12.1
	horizontalScrolling: true, // boolean, since 1.15.1
	verticalScrolling: true, // boolean, since 1.15.1
	resizable: false, // boolean, since 1.30
	draggable: false, // boolean, since 1.30
	escapeHandler: undefined, // any, since 1.44
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	subHeader: undefined, // sap.m.IBar, since 1.12.2
	customHeader: undefined, // sap.m.IBar, since 1.15.1
	beginButton: undefined, // sap.m.Button, since 1.15.1
	endButton: undefined, // sap.m.Button, since 1.15.1
	buttons: [], // sap.m.Button, since 1.21.1
	leftButton: undefined, // sap.m.Button
	rightButton: undefined, // sap.m.Button
	initialFocus: undefined, // sap.ui.core.Control, since 1.15.0
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Dialog xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	icon=""
	title=""
	showHeader="true"
	type="Standard"
	state="None"
	stretchOnPhone="false"
	stretch="false"
	contentWidth=""
	contentHeight=""
	horizontalScrolling="true"
	verticalScrolling="true"
	resizable="false"
	draggable="false"
	escapeHandler=""
	leftButton=""
	rightButton=""
	initialFocus=""
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	beforeOpen=""
	afterOpen=""
	beforeClose=""
	afterClose="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
		<subHeader></subHeader> <!-- sap.m.IBar, since 1.12.2 -->
		<customHeader></customHeader> <!-- sap.m.IBar, since 1.15.1 -->
		<beginButton></beginButton> <!-- sap.m.Button, since 1.15.1 -->
		<endButton></endButton> <!-- sap.m.Button, since 1.15.1 -->
		<buttons></buttons> <!-- sap.m.Button, since 1.21.1 -->
</Dialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DisplayListItem" alias="DisplayListItem,Item">
	<jsTemplate><![CDATA[new sap.m.DisplayListItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	label: undefined, // string
	value: undefined, // string
	valueTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DisplayListItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	label=""
	value=""
	valueTextDirection="Inherit"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</DisplayListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DraftIndicator" alias="DraftIndicator,Indicator">
	<jsTemplate><![CDATA[new sap.m.DraftIndicator({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	state: sap.m.DraftIndicatorState.Clear, // sap.m.DraftIndicatorState
	minDisplayTime: 1500, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DraftIndicator xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	state="Clear"
	minDisplayTime="1500"
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</DraftIndicator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FacetFilter" alias="FacetFilter,Filter">
	<jsTemplate><![CDATA[new sap.m.FacetFilter({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	showPersonalization: false, // boolean
	type: sap.m.FacetFilterType.Simple, // sap.m.FacetFilterType
	liveSearch: true, // boolean
	showSummaryBar: false, // boolean
	showReset: true, // boolean
	showPopoverOKButton: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	lists: [], // sap.m.FacetFilterList
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	reset: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	confirm: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FacetFilter xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	showPersonalization="false"
	type="Simple"
	liveSearch="true"
	showSummaryBar="false"
	showReset="true"
	showPopoverOKButton="false"
	validateFieldGroup=""
	reset=""
	confirm="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<lists></lists> <!-- sap.m.FacetFilterList -->
</FacetFilter>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FacetFilterItem" alias="FacetFilterItem,Item">
	<jsTemplate><![CDATA[new sap.m.FacetFilterItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	key: undefined, // string
	text: undefined, // string
	count: undefined, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FacetFilterItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	key=""
	text=""
	count=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</FacetFilterItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FacetFilterList" alias="FacetFilterList,List">
	<jsTemplate><![CDATA[new sap.m.FacetFilterList({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16.0
	growingThreshold: 20, // int, since 1.16.0
	growingTriggerText: undefined, // string, since 1.16.0
	growingScrollToLoad: false, // boolean, since 1.16.0
	growingDirection: sap.m.ListGrowingDirection.Downwards, // sap.m.ListGrowingDirection, since 1.40.0
	rememberSelections: true, // boolean, since 1.16.6
	keyboardMode: sap.m.ListKeyboardMode.Navigation, // sap.m.ListKeyboardMode, since 1.38.0
	sticky: undefined, // sap.m.Sticky[], since 1.58
	backgroundDesign: sap.m.BackgroundDesign.Solid, // sap.m.BackgroundDesign, since 1.14
	title: undefined, // string
	wordWrap: false, // boolean
	multiSelect: true, // boolean
	active: true, // boolean
	enableCaseInsensitiveSearch: false, // boolean
	allCount: undefined, // int
	sequence: -1, // int
	key: undefined, // string
	showRemoveFacetIcon: true, // boolean, since 1.20.4
	retainListSequence: false, // boolean, since 1.22.1
	dataType: sap.m.FacetFilterListDataType.String, // sap.m.FacetFilterListDataType
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	contextMenu: undefined, // sap.ui.core.IContextMenu, since 1.54
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.20
	beforeOpenContextMenu: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.54
	listOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	listClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FacetFilterList xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	growingDirection="Downwards"
	rememberSelections="true"
	keyboardMode="Navigation"
	sticky=""
	backgroundDesign="Solid"
	title=""
	wordWrap="false"
	multiSelect="true"
	active="true"
	enableCaseInsensitiveSearch="false"
	allCount=""
	sequence="-1"
	key=""
	showRemoveFacetIcon="true"
	retainListSequence="false"
	dataType="String"
	ariaLabelledBy=""
	validateFieldGroup=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress=""
	beforeOpenContextMenu=""
	listOpen=""
	listClose="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<contextMenu></contextMenu> <!-- sap.ui.core.IContextMenu, since 1.54 -->
</FacetFilterList>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FeedContent" alias="FeedContent,Content">
	<jsTemplate><![CDATA[new sap.m.FeedContent({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	size: sap.m.Size.Auto, // sap.m.Size
	contentText: undefined, // string
	subheader: undefined, // string
	value: undefined, // string
	valueColor: undefined, // sap.m.ValueColor
	truncateValueTo: 4, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FeedContent xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	size="Auto"
	contentText=""
	subheader=""
	value=""
	valueColor=""
	truncateValueTo="4"
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</FeedContent>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FeedInput" alias="FeedInput,Input">
	<jsTemplate><![CDATA[new sap.m.FeedInput({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	enabled: true, // boolean
	maxLength: 0, // int
	placeholder: "Post something here", // string
	value: undefined, // string
	icon: undefined, // sap.ui.core.URI
	showIcon: true, // boolean
	iconDensityAware: true, // boolean
	buttonTooltip: Submit, // sap.ui.core.TooltipBase, since 1.28
	ariaLabelForPicture: undefined, // string, since 1.30
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	post: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FeedInput xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	enabled="true"
	maxLength="0"
	placeholder="Post something here"
	value=""
	icon=""
	showIcon="true"
	iconDensityAware="true"
	buttonTooltip="Submit"
	ariaLabelForPicture=""
	validateFieldGroup=""
	post="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</FeedInput>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FeedListItem" alias="FeedListItem,Item">
	<jsTemplate><![CDATA[new sap.m.FeedListItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	icon: undefined, // sap.ui.core.URI
	activeIcon: undefined, // sap.ui.core.URI
	sender: undefined, // string
	text: undefined, // string
	info: undefined, // string
	timestamp: undefined, // string
	senderActive: true, // boolean
	iconActive: true, // boolean
	iconDensityAware: true, // boolean
	showIcon: true, // boolean
	convertLinksToAnchorTags: sap.m.LinkConversion.None, // sap.m.LinkConversion, since 1.46.1
	convertedLinksDefaultTarget: "_blank", // string, since 1.46.1
	maxCharacters: undefined, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	actions: [], // sap.m.FeedListItemAction, since 1.52.0
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	senderPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	iconPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FeedListItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	icon=""
	activeIcon=""
	sender=""
	text=""
	info=""
	timestamp=""
	senderActive="true"
	iconActive="true"
	iconDensityAware="true"
	showIcon="true"
	convertLinksToAnchorTags="None"
	convertedLinksDefaultTarget="_blank"
	maxCharacters=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress=""
	senderPress=""
	iconPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<actions></actions> <!-- sap.m.FeedListItemAction, since 1.52.0 -->
</FeedListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FeedListItemAction" alias="FeedListItemAction,Action">
	<jsTemplate><![CDATA[new sap.m.FeedListItemAction({
	id: "${id}", // sap.ui.core.ID
	icon: undefined, // sap.ui.core.URI
	text: "", // string
	key: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FeedListItemAction xmlns="sap.m"
	id="${id}"
	icon=""
	text=""
	key=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</FeedListItemAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FlexBox" alias="FlexBox,Box">
	<jsTemplate><![CDATA[new sap.m.FlexBox({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	height: "", // sap.ui.core.CSSSize, since 1.9.1
	width: "", // sap.ui.core.CSSSize, since 1.9.1
	displayInline: false, // boolean
	direction: sap.m.FlexDirection.Row, // sap.m.FlexDirection
	fitContainer: false, // boolean
	renderType: sap.m.FlexRendertype.Div, // sap.m.FlexRendertype
	justifyContent: sap.m.FlexJustifyContent.Start, // sap.m.FlexJustifyContent
	alignItems: sap.m.FlexAlignItems.Stretch, // sap.m.FlexAlignItems
	wrap: sap.m.FlexWrap.NoWrap, // sap.m.FlexWrap, since 1.36.0
	alignContent: sap.m.FlexAlignContent.Stretch, // sap.m.FlexAlignContent, since 1.36.0
	backgroundDesign: sap.m.BackgroundDesign.Transparent, // sap.m.BackgroundDesign, since 1.38.5
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FlexBox xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	height=""
	width=""
	displayInline="false"
	direction="Row"
	fitContainer="false"
	renderType="Div"
	justifyContent="Start"
	alignItems="Stretch"
	wrap="NoWrap"
	alignContent="Stretch"
	backgroundDesign="Transparent"
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Control -->
</FlexBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FlexItemData" alias="FlexItemData,Data">
	<jsTemplate><![CDATA[new sap.m.FlexItemData({
	id: "${id}", // sap.ui.core.ID
	alignSelf: sap.m.FlexAlignSelf.Auto, // sap.m.FlexAlignSelf
	order: 0, // int
	growFactor: 0, // float
	shrinkFactor: 1, // float, since 1.24.0
	baseSize: "auto", // sap.ui.core.CSSSize, since 1.32.0
	minHeight: "auto", // sap.ui.core.CSSSize, since 1.36.0
	maxHeight: "", // sap.ui.core.CSSSize, since 1.36.0
	minWidth: "auto", // sap.ui.core.CSSSize, since 1.36.0
	maxWidth: "", // sap.ui.core.CSSSize, since 1.36.0
	styleClass: "", // string
	backgroundDesign: sap.m.BackgroundDesign.Transparent, // sap.m.BackgroundDesign, since 1.38.5
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FlexItemData xmlns="sap.m"
	id="${id}"
	alignSelf="Auto"
	order="0"
	growFactor="0"
	shrinkFactor="1"
	baseSize="auto"
	minHeight="auto"
	maxHeight=""
	minWidth="auto"
	maxWidth=""
	styleClass=""
	backgroundDesign="Transparent">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</FlexItemData>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FormattedText" alias="FormattedText,Text">
	<jsTemplate><![CDATA[new sap.m.FormattedText({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	htmlText: "", // string
	width: undefined, // sap.ui.core.CSSSize
	convertLinksToAnchorTags: sap.m.LinkConversion.None, // sap.m.LinkConversion, since 1.45.5
	convertedLinksDefaultTarget: "_blank", // string, since 1.45.5
	height: undefined, // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FormattedText xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	htmlText=""
	width=""
	convertLinksToAnchorTags="None"
	convertedLinksDefaultTarget="_blank"
	height=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</FormattedText>
]]></xmlTemplate>
</Template>
<Template name="sap.m.GenericTile" alias="GenericTile,Tile">
	<jsTemplate><![CDATA[new sap.m.GenericTile({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	mode: sap.m.GenericTileMode.ContentMode, // sap.m.GenericTileMode
	header: undefined, // string
	subheader: undefined, // string
	failedText: undefined, // string
	size: sap.m.Size.Auto, // sap.m.Size
	frameType: sap.m.FrameType.OneByOne, // sap.m.FrameType
	backgroundImage: undefined, // sap.ui.core.URI
	headerImage: undefined, // sap.ui.core.URI
	state: sap.m.LoadState.Loaded, // sap.m.LoadState
	imageDescription: undefined, // string
	scope: sap.m.GenericTileScope.Display, // sap.m.GenericTileScope, since 1.46.0
	sizeBehavior: sap.m.TileSizeBehavior.Responsive, // sap.m.TileSizeBehavior
	ariaLabel: undefined, // string, since 1.50.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	tileContent: [], // sap.m.TileContent
	icon: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<GenericTile xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	mode="ContentMode"
	header=""
	subheader=""
	failedText=""
	size="Auto"
	frameType="OneByOne"
	backgroundImage=""
	headerImage=""
	state="Loaded"
	imageDescription=""
	scope="Display"
	sizeBehavior="Responsive"
	ariaLabel=""
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<tileContent></tileContent> <!-- sap.m.TileContent -->
		<icon></icon> <!-- sap.ui.core.Control -->
</GenericTile>
]]></xmlTemplate>
</Template>
<Template name="sap.m.GroupHeaderListItem" alias="GroupHeaderListItem,Item">
	<jsTemplate><![CDATA[new sap.m.GroupHeaderListItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	title: undefined, // string
	count: undefined, // string
	upperCase: false, // boolean, since 1.13.2
	titleTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<GroupHeaderListItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	title=""
	count=""
	upperCase="false"
	titleTextDirection="Inherit"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</GroupHeaderListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.GrowingList" alias="GrowingList,List">
	<jsTemplate><![CDATA[new sap.m.GrowingList({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16.0
	growingThreshold: 20, // int, since 1.16.0
	growingTriggerText: undefined, // string, since 1.16.0
	growingScrollToLoad: false, // boolean, since 1.16.0
	growingDirection: sap.m.ListGrowingDirection.Downwards, // sap.m.ListGrowingDirection, since 1.40.0
	rememberSelections: true, // boolean, since 1.16.6
	keyboardMode: sap.m.ListKeyboardMode.Navigation, // sap.m.ListKeyboardMode, since 1.38.0
	sticky: undefined, // sap.m.Sticky[], since 1.58
	backgroundDesign: sap.m.BackgroundDesign.Solid, // sap.m.BackgroundDesign, since 1.14
	threshold: 20, // int, since 1.16
	triggerText: undefined, // string, since 1.16
	scrollToLoad: false, // boolean, since 1.16
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	contextMenu: undefined, // sap.ui.core.IContextMenu, since 1.54
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.20
	beforeOpenContextMenu: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.54
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<GrowingList xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	growingDirection="Downwards"
	rememberSelections="true"
	keyboardMode="Navigation"
	sticky=""
	backgroundDesign="Solid"
	threshold="20"
	triggerText=""
	scrollToLoad="false"
	ariaLabelledBy=""
	validateFieldGroup=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress=""
	beforeOpenContextMenu="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<contextMenu></contextMenu> <!-- sap.ui.core.IContextMenu, since 1.54 -->
</GrowingList>
]]></xmlTemplate>
</Template>
<Template name="sap.m.HBox" alias="HBox">
	<jsTemplate><![CDATA[new sap.m.HBox({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	height: "", // sap.ui.core.CSSSize, since 1.9.1
	width: "", // sap.ui.core.CSSSize, since 1.9.1
	displayInline: false, // boolean
	direction: sap.m.FlexDirection.Row, // sap.m.FlexDirection
	fitContainer: false, // boolean
	renderType: sap.m.FlexRendertype.Div, // sap.m.FlexRendertype
	justifyContent: sap.m.FlexJustifyContent.Start, // sap.m.FlexJustifyContent
	alignItems: sap.m.FlexAlignItems.Stretch, // sap.m.FlexAlignItems
	wrap: sap.m.FlexWrap.NoWrap, // sap.m.FlexWrap, since 1.36.0
	alignContent: sap.m.FlexAlignContent.Stretch, // sap.m.FlexAlignContent, since 1.36.0
	backgroundDesign: sap.m.BackgroundDesign.Transparent, // sap.m.BackgroundDesign, since 1.38.5
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<HBox xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	height=""
	width=""
	displayInline="false"
	direction="Row"
	fitContainer="false"
	renderType="Div"
	justifyContent="Start"
	alignItems="Stretch"
	wrap="NoWrap"
	alignContent="Stretch"
	backgroundDesign="Transparent"
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Control -->
</HBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.HeaderContainer" alias="HeaderContainer,Container">
	<jsTemplate><![CDATA[new sap.m.HeaderContainer({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	scrollStep: 300, // int
	scrollStepByItem: 1, // int
	scrollTime: 500, // int
	showOverflowItem: true, // boolean
	showDividers: true, // boolean
	orientation: sap.ui.core.Orientation.Horizontal, // sap.ui.core.Orientation
	backgroundDesign: sap.m.BackgroundDesign.Transparent, // sap.m.BackgroundDesign
	width: undefined, // sap.ui.core.CSSSize
	height: undefined, // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<HeaderContainer xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	scrollStep="300"
	scrollStepByItem="1"
	scrollTime="500"
	showOverflowItem="true"
	showDividers="true"
	orientation="Horizontal"
	backgroundDesign="Transparent"
	width=""
	height=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</HeaderContainer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.IconTabBar" alias="IconTabBar,Bar">
	<jsTemplate><![CDATA[new sap.m.IconTabBar({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	showSelection: true, // boolean
	expandable: true, // boolean, since 1.15.0
	expanded: true, // boolean, since 1.15.0
	selectedKey: undefined, // string, since 1.15.0
	upperCase: false, // boolean, since 1.22
	stretchContentHeight: false, // boolean, since 1.26
	applyContentPadding: true, // boolean, since 1.26
	backgroundDesign: sap.m.BackgroundDesign.Solid, // sap.m.BackgroundDesign, since 1.26
	headerMode: sap.m.IconTabHeaderMode.Standard, // sap.m.IconTabHeaderMode, since 1.40
	showOverflowSelectList: false, // boolean, since 1.42
	headerBackgroundDesign: sap.m.BackgroundDesign.Solid, // sap.m.BackgroundDesign, since 1.44
	enableTabReordering: false, // boolean, since 1.46
	tabDensityMode: sap.m.IconTabDensityMode.Cozy, // sap.m.IconTabDensityMode, since 1.56
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.IconTab
	content: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	expand: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.15.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<IconTabBar xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	showSelection="true"
	expandable="true"
	expanded="true"
	selectedKey=""
	upperCase="false"
	stretchContentHeight="false"
	applyContentPadding="true"
	backgroundDesign="Solid"
	headerMode="Standard"
	showOverflowSelectList="false"
	headerBackgroundDesign="Solid"
	enableTabReordering="false"
	tabDensityMode="Cozy"
	validateFieldGroup=""
	select=""
	expand="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.IconTab -->
		<content></content> <!-- sap.ui.core.Control -->
</IconTabBar>
]]></xmlTemplate>
</Template>
<Template name="sap.m.IconTabFilter" alias="IconTabFilter,Filter">
	<jsTemplate><![CDATA[new sap.m.IconTabFilter({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	count: "", // string
	showAll: false, // boolean
	icon: "", // sap.ui.core.URI
	iconColor: sap.ui.core.IconColor.Default, // sap.ui.core.IconColor
	iconDensityAware: true, // boolean
	visible: true, // boolean
	design: sap.m.IconTabFilterDesign.Vertical, // sap.m.IconTabFilterDesign
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [] // sap.ui.core.Control, since 1.15.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<IconTabFilter xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	count=""
	showAll="false"
	icon=""
	iconColor="Default"
	iconDensityAware="true"
	visible="true"
	design="Vertical">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control, since 1.15.0 -->
</IconTabFilter>
]]></xmlTemplate>
</Template>
<Template name="sap.m.IconTabHeader" alias="IconTabHeader,Header">
	<jsTemplate><![CDATA[new sap.m.IconTabHeader({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	showSelection: true, // boolean
	selectedKey: undefined, // string, since 1.15.0
	visible: true, // boolean, since 1.15.0
	mode: sap.m.IconTabHeaderMode.Standard, // sap.m.IconTabHeaderMode, since 1.40
	showOverflowSelectList: false, // boolean, since 1.42
	backgroundDesign: sap.m.BackgroundDesign.Solid, // sap.m.BackgroundDesign, since 1.44
	enableTabReordering: false, // boolean, since 1.46
	tabDensityMode: sap.m.IconTabDensityMode.Cozy, // sap.m.IconTabDensityMode, since 1.56
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.IconTab
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<IconTabHeader xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	showSelection="true"
	selectedKey=""
	visible="true"
	mode="Standard"
	showOverflowSelectList="false"
	backgroundDesign="Solid"
	enableTabReordering="false"
	tabDensityMode="Cozy"
	validateFieldGroup=""
	select="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.IconTab -->
</IconTabHeader>
]]></xmlTemplate>
</Template>
<Template name="sap.m.IconTabSeparator" alias="IconTabSeparator,Separator">
	<jsTemplate><![CDATA[new sap.m.IconTabSeparator({
	id: "${id}", // sap.ui.core.ID
	icon: "", // sap.ui.core.URI
	visible: true, // boolean
	iconDensityAware: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<IconTabSeparator xmlns="sap.m"
	id="${id}"
	icon=""
	visible="true"
	iconDensityAware="true">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</IconTabSeparator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Image" alias="Image">
	<jsTemplate><![CDATA[new sap.m.Image({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	src: undefined, // sap.ui.core.URI
	width: undefined, // sap.ui.core.CSSSize
	height: undefined, // sap.ui.core.CSSSize
	decorative: true, // boolean
	alt: undefined, // string
	useMap: undefined, // string
	densityAware: true, // boolean
	activeSrc: "", // sap.ui.core.URI
	mode: sap.m.ImageMode.Image, // sap.m.ImageMode, since 1.30.0
	backgroundSize: "cover", // string, since 1.30.0
	backgroundPosition: "initial", // string, since 1.30.0
	backgroundRepeat: "no-repeat", // string, since 1.30.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	detailBox: undefined, // sap.m.LightBox
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	load: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.36.2
	error: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.36.2
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Image xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	src=""
	width=""
	height=""
	decorative="true"
	alt=""
	useMap=""
	densityAware="true"
	activeSrc=""
	mode="Image"
	backgroundSize="cover"
	backgroundPosition="initial"
	backgroundRepeat="no-repeat"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	press=""
	load=""
	error="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<detailBox></detailBox> <!-- sap.m.LightBox -->
</Image>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ImageContent" alias="ImageContent,Content">
	<jsTemplate><![CDATA[new sap.m.ImageContent({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	src: undefined, // sap.ui.core.URI
	description: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ImageContent xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	src=""
	description=""
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ImageContent>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Input" alias="Input">
	<jsTemplate><![CDATA[new sap.m.Input({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	type: sap.m.InputType.Text, // sap.m.InputType
	maxLength: 0, // int
	dateFormat: "YYYY-MM-dd", // string
	showValueHelp: false, // boolean, since 1.16
	showSuggestion: false, // boolean, since 1.16.1
	valueHelpOnly: false, // boolean, since 1.21.0
	filterSuggests: true, // boolean
	maxSuggestionWidth: undefined, // sap.ui.core.CSSSize, since 1.21.1
	startSuggestion: 1, // int, since 1.21.2
	showTableSuggestionValueHelp: true, // boolean, since 1.22.1
	description: undefined, // string
	fieldWidth: "50%", // sap.ui.core.CSSSize
	valueLiveUpdate: false, // boolean, since 1.24
	selectedKey: "", // string, since 1.44
	textFormatMode: sap.m.InputTextFormatMode.Value, // sap.m.InputTextFormatMode, since 1.44
	textFormatter: , // any, since 1.44
	suggestionRowValidator: , // any, since 1.44
	enableSuggestionsHighlighting: true, // boolean, since 1.46
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	suggestionItems: [], // sap.ui.core.Item, since 1.16.1
	suggestionColumns: [], // sap.m.Column, since 1.21.1
	suggestionRows: [], // sap.m.ColumnListItem, since 1.21.1
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	selectedItem: undefined, // sap.ui.core.Item, since 1.44
	selectedRow: undefined, // sap.m.ColumnListItem, since 1.44
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	valueHelpRequest: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	suggest: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.1
	suggestionItemSelected: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	submit: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.33.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Input xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	type="Text"
	maxLength="0"
	dateFormat="YYYY-MM-dd"
	showValueHelp="false"
	showSuggestion="false"
	valueHelpOnly="false"
	filterSuggests="true"
	maxSuggestionWidth=""
	startSuggestion="1"
	showTableSuggestionValueHelp="true"
	description=""
	fieldWidth="50%"
	valueLiveUpdate="false"
	selectedKey=""
	textFormatMode="Value"
	textFormatter=""
	suggestionRowValidator=""
	enableSuggestionsHighlighting="true"
	ariaLabelledBy=""
	selectedItem=""
	selectedRow=""
	validateFieldGroup=""
	change=""
	liveChange=""
	valueHelpRequest=""
	suggest=""
	suggestionItemSelected=""
	submit="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<suggestionItems></suggestionItems> <!-- sap.ui.core.Item, since 1.16.1 -->
		<suggestionColumns></suggestionColumns> <!-- sap.m.Column, since 1.21.1 -->
		<suggestionRows></suggestionRows> <!-- sap.m.ColumnListItem, since 1.21.1 -->
</Input>
]]></xmlTemplate>
</Template>
<Template name="sap.m.InputBase" alias="InputBase,Base">
	<jsTemplate><![CDATA[new sap.m.InputBase({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<InputBase xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	ariaLabelledBy=""
	validateFieldGroup=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</InputBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.InputListItem" alias="InputListItem,Item">
	<jsTemplate><![CDATA[new sap.m.InputListItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	label: undefined, // string
	labelTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.30.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<InputListItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	label=""
	labelTextDirection="Inherit"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</InputListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Label" alias="Label">
	<jsTemplate><![CDATA[new sap.m.Label({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	design: sap.m.LabelDesign.Standard, // sap.m.LabelDesign
	text: undefined, // string
	textAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	width: "", // sap.ui.core.CSSSize
	required: false, // boolean
	displayOnly: false, // boolean, since 1.50.0
	wrapping: false, // boolean, since 1.50
	vAlign: sap.ui.core.VerticalAlign.Inherit, // sap.ui.core.VerticalAlign, since 1.54
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	labelFor: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Label xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	design="Standard"
	text=""
	textAlign="Begin"
	textDirection="Inherit"
	width=""
	required="false"
	displayOnly="false"
	wrapping="false"
	vAlign="Inherit"
	labelFor=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</Label>
]]></xmlTemplate>
</Template>
<Template name="sap.m.LightBox" alias="LightBox,Box">
	<jsTemplate><![CDATA[new sap.m.LightBox({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	imageContent: [], // sap.m.LightBoxItem
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<LightBox xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<imageContent></imageContent> <!-- sap.m.LightBoxItem -->
</LightBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.LightBoxItem" alias="LightBoxItem,Item">
	<jsTemplate><![CDATA[new sap.m.LightBoxItem({
	id: "${id}", // sap.ui.core.ID
	imageSrc: "", // sap.ui.core.URI
	alt: "", // string
	title: "", // string
	subtitle: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<LightBoxItem xmlns="sap.m"
	id="${id}"
	imageSrc=""
	alt=""
	title=""
	subtitle="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</LightBoxItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Link" alias="Link">
	<jsTemplate><![CDATA[new sap.m.Link({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: "", // string
	enabled: true, // boolean
	target: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	href: undefined, // sap.ui.core.URI
	validateUrl: false, // boolean, since 1.54.0
	wrapping: false, // boolean
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.28.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	subtle: false, // boolean, since 1.22
	emphasized: false, // boolean, since 1.22
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Link xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	enabled="true"
	target=""
	width=""
	href=""
	validateUrl="false"
	wrapping="false"
	textAlign="Initial"
	textDirection="Inherit"
	subtle="false"
	emphasized="false"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</Link>
]]></xmlTemplate>
</Template>
<Template name="sap.m.List" alias="List">
	<jsTemplate><![CDATA[new sap.m.List({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16.0
	growingThreshold: 20, // int, since 1.16.0
	growingTriggerText: undefined, // string, since 1.16.0
	growingScrollToLoad: false, // boolean, since 1.16.0
	growingDirection: sap.m.ListGrowingDirection.Downwards, // sap.m.ListGrowingDirection, since 1.40.0
	rememberSelections: true, // boolean, since 1.16.6
	keyboardMode: sap.m.ListKeyboardMode.Navigation, // sap.m.ListKeyboardMode, since 1.38.0
	sticky: undefined, // sap.m.Sticky[], since 1.58
	backgroundDesign: sap.m.BackgroundDesign.Solid, // sap.m.BackgroundDesign, since 1.14
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	contextMenu: undefined, // sap.ui.core.IContextMenu, since 1.54
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.20
	beforeOpenContextMenu: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.54
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<List xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	growingDirection="Downwards"
	rememberSelections="true"
	keyboardMode="Navigation"
	sticky=""
	backgroundDesign="Solid"
	ariaLabelledBy=""
	validateFieldGroup=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress=""
	beforeOpenContextMenu="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<contextMenu></contextMenu> <!-- sap.ui.core.IContextMenu, since 1.54 -->
</List>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ListBase" alias="ListBase,Base">
	<jsTemplate><![CDATA[new sap.m.ListBase({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16.0
	growingThreshold: 20, // int, since 1.16.0
	growingTriggerText: undefined, // string, since 1.16.0
	growingScrollToLoad: false, // boolean, since 1.16.0
	growingDirection: sap.m.ListGrowingDirection.Downwards, // sap.m.ListGrowingDirection, since 1.40.0
	rememberSelections: true, // boolean, since 1.16.6
	keyboardMode: sap.m.ListKeyboardMode.Navigation, // sap.m.ListKeyboardMode, since 1.38.0
	sticky: undefined, // sap.m.Sticky[], since 1.58
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	contextMenu: undefined, // sap.ui.core.IContextMenu, since 1.54
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.20
	beforeOpenContextMenu: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.54
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ListBase xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	growingDirection="Downwards"
	rememberSelections="true"
	keyboardMode="Navigation"
	sticky=""
	ariaLabelledBy=""
	validateFieldGroup=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress=""
	beforeOpenContextMenu="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<contextMenu></contextMenu> <!-- sap.ui.core.IContextMenu, since 1.54 -->
</ListBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ListItemBase" alias="ListItemBase,Base">
	<jsTemplate><![CDATA[new sap.m.ListItemBase({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ListItemBase xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ListItemBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MaskInput" alias="MaskInput,Input">
	<jsTemplate><![CDATA[new sap.m.MaskInput({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	placeholderSymbol: "_", // string
	mask: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	rules: [], // sap.m.MaskInputRule
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MaskInput xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	placeholderSymbol="_"
	mask=""
	ariaLabelledBy=""
	validateFieldGroup=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<rules></rules> <!-- sap.m.MaskInputRule -->
</MaskInput>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MaskInputRule" alias="MaskInputRule,Rule">
	<jsTemplate><![CDATA[new sap.m.MaskInputRule({
	id: "${id}", // sap.ui.core.ID
	maskFormatSymbol: "*", // string
	regex: "[a-zA-Z0-9]", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MaskInputRule xmlns="sap.m"
	id="${id}"
	maskFormatSymbol="*"
	regex="[a-zA-Z0-9]">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</MaskInputRule>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Menu" alias="Menu">
	<jsTemplate><![CDATA[new sap.m.Menu({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.MenuItem
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	itemSelected: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	closed: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Menu xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	validateFieldGroup=""
	itemSelected=""
	closed="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.MenuItem -->
</Menu>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MenuButton" alias="MenuButton,Button">
	<jsTemplate><![CDATA[new sap.m.MenuButton({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: undefined, // string
	type: sap.m.ButtonType.Default, // sap.m.ButtonType
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	icon: undefined, // sap.ui.core.URI
	activeIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	buttonMode: sap.m.MenuButtonMode.Regular, // sap.m.MenuButtonMode
	menuPosition: BeginBottom, // any, since 1.56.0
	useDefaultActionOnly: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	menu: undefined, // sap.m.Menu
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	defaultAction: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MenuButton xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	type="Default"
	width=""
	enabled="true"
	icon=""
	activeIcon=""
	iconDensityAware="true"
	textDirection="Inherit"
	buttonMode="Regular"
	menuPosition="BeginBottom"
	useDefaultActionOnly="false"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	defaultAction="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<menu></menu> <!-- sap.m.Menu -->
</MenuButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MenuItem" alias="MenuItem,Item">
	<jsTemplate><![CDATA[new sap.m.MenuItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	icon: undefined, // string
	visible: true, // boolean
	startsSection: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.MenuItem
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	propertyChanged: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	aggregationChanged: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MenuItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	icon=""
	visible="true"
	startsSection="false"
	press=""
	propertyChanged=""
	aggregationChanged="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.MenuItem -->
</MenuItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MessageItem" alias="MessageItem,Item">
	<jsTemplate><![CDATA[new sap.m.MessageItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	type: sap.ui.core.MessageType.Error, // sap.ui.core.MessageType
	title: "", // string
	subtitle: undefined, // string
	description: "", // string
	markupDescription: false, // boolean
	longtextUrl: undefined, // sap.ui.core.URI
	counter: undefined, // int
	groupName: "", // string
	activeTitle: false, // boolean, since 1.58
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	link: undefined // sap.m.Link
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MessageItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	type="Error"
	title=""
	subtitle=""
	description=""
	markupDescription="false"
	longtextUrl=""
	counter=""
	groupName=""
	activeTitle="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<link></link> <!-- sap.m.Link -->
</MessageItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MessagePage" alias="MessagePage,Page">
	<jsTemplate><![CDATA[new sap.m.MessagePage({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: "No matching items found.", // string
	description: "Check the filter settings.", // string
	title: undefined, // string
	showHeader: true, // boolean
	showNavButton: false, // boolean
	icon: "sap-icon://documents", // sap.ui.core.URI
	iconAlt: undefined, // string, since 1.52
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	enableFormattedText: false, // boolean, since 1.54
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	customText: undefined, // sap.m.Link
	customDescription: undefined, // sap.m.Link
	buttons: [], // sap.m.Button, since 1.54
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.28.1
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MessagePage xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text="No matching items found."
	description="Check the filter settings."
	title=""
	showHeader="true"
	showNavButton="false"
	icon="sap-icon://documents"
	iconAlt=""
	textDirection="Inherit"
	enableFormattedText="false"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<customText></customText> <!-- sap.m.Link -->
		<customDescription></customDescription> <!-- sap.m.Link -->
		<buttons></buttons> <!-- sap.m.Button, since 1.54 -->
</MessagePage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MessagePopover" alias="MessagePopover,Popover">
	<jsTemplate><![CDATA[new sap.m.MessagePopover({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	asyncDescriptionHandler: undefined, // any
	asyncURLHandler: undefined, // any
	placement: sap.m.VerticalPlacementType.Vertical, // sap.m.VerticalPlacementType
	initiallyExpanded: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.MessageItem
	headerButton: undefined, // sap.m.Button
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	itemSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	listSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	longtextLoaded: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	urlValidated: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	activeTitlePress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.58
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MessagePopover xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	asyncDescriptionHandler=""
	asyncURLHandler=""
	placement="Vertical"
	initiallyExpanded="true"
	validateFieldGroup=""
	afterOpen=""
	afterClose=""
	beforeOpen=""
	beforeClose=""
	itemSelect=""
	listSelect=""
	longtextLoaded=""
	urlValidated=""
	activeTitlePress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.MessageItem -->
		<headerButton></headerButton> <!-- sap.m.Button -->
</MessagePopover>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MessagePopoverItem" alias="MessagePopoverItem,Item">
	<jsTemplate><![CDATA[new sap.m.MessagePopoverItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	type: sap.ui.core.MessageType.Error, // sap.ui.core.MessageType
	title: "", // string
	subtitle: undefined, // string
	description: "", // string
	markupDescription: false, // boolean
	longtextUrl: undefined, // sap.ui.core.URI
	counter: undefined, // int
	groupName: "", // string
	activeTitle: false, // boolean, since 1.58
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	link: undefined // sap.m.Link
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MessagePopoverItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	type="Error"
	title=""
	subtitle=""
	description=""
	markupDescription="false"
	longtextUrl=""
	counter=""
	groupName=""
	activeTitle="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<link></link> <!-- sap.m.Link -->
</MessagePopoverItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MessageStrip" alias="MessageStrip,Strip">
	<jsTemplate><![CDATA[new sap.m.MessageStrip({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: "", // string
	type: sap.ui.core.MessageType.Information, // sap.ui.core.MessageType
	customIcon: "", // sap.ui.core.URI
	showIcon: false, // boolean
	showCloseButton: false, // boolean
	enableFormattedText: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	link: undefined, // sap.m.Link
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	close: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MessageStrip xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	type="Information"
	customIcon=""
	showIcon="false"
	showCloseButton="false"
	enableFormattedText="false"
	validateFieldGroup=""
	close="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<link></link> <!-- sap.m.Link -->
</MessageStrip>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MessageView" alias="MessageView,View">
	<jsTemplate><![CDATA[new sap.m.MessageView({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	asyncDescriptionHandler: undefined, // any
	asyncURLHandler: undefined, // any
	groupItems: false, // boolean
	showDetailsPageHeader: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.MessageItem
	headerButton: undefined, // sap.m.Button
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	itemSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	listSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	longtextLoaded: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	urlValidated: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	activeTitlePress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.58
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MessageView xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	asyncDescriptionHandler=""
	asyncURLHandler=""
	groupItems="false"
	showDetailsPageHeader="true"
	validateFieldGroup=""
	afterOpen=""
	itemSelect=""
	listSelect=""
	longtextLoaded=""
	urlValidated=""
	activeTitlePress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.MessageItem -->
		<headerButton></headerButton> <!-- sap.m.Button -->
</MessageView>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MultiComboBox" alias="MultiComboBox,Box">
	<jsTemplate><![CDATA[new sap.m.MultiComboBox({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	maxWidth: "100%", // sap.ui.core.CSSSize
	showButton: true, // boolean, since 1.38
	selectedKeys: [], // string[]
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	selectedItems: [], // sap.ui.core.Item
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	loadItems: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.38
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionFinish: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MultiComboBox xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	maxWidth="100%"
	showButton="true"
	selectedKeys=""
	ariaLabelledBy=""
	selectedItems=""
	validateFieldGroup=""
	change=""
	loadItems=""
	selectionChange=""
	selectionFinish="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Item -->
</MultiComboBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MultiInput" alias="MultiInput,Input">
	<jsTemplate><![CDATA[new sap.m.MultiInput({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	type: sap.m.InputType.Text, // sap.m.InputType
	maxLength: 0, // int
	dateFormat: "YYYY-MM-dd", // string
	showValueHelp: false, // boolean, since 1.16
	showSuggestion: false, // boolean, since 1.16.1
	valueHelpOnly: false, // boolean, since 1.21.0
	filterSuggests: true, // boolean
	maxSuggestionWidth: undefined, // sap.ui.core.CSSSize, since 1.21.1
	startSuggestion: 1, // int, since 1.21.2
	showTableSuggestionValueHelp: true, // boolean, since 1.22.1
	description: undefined, // string
	fieldWidth: "50%", // sap.ui.core.CSSSize
	valueLiveUpdate: false, // boolean, since 1.24
	selectedKey: "", // string, since 1.44
	textFormatMode: sap.m.InputTextFormatMode.Value, // sap.m.InputTextFormatMode, since 1.44
	textFormatter: , // any, since 1.44
	suggestionRowValidator: , // any, since 1.44
	enableSuggestionsHighlighting: true, // boolean, since 1.46
	enableMultiLineMode: false, // boolean, since 1.28
	maxTokens: undefined, // int, since 1.36
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	suggestionItems: [], // sap.ui.core.Item, since 1.16.1
	suggestionColumns: [], // sap.m.Column, since 1.21.1
	suggestionRows: [], // sap.m.ColumnListItem, since 1.21.1
	tokens: [], // sap.m.Token
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	selectedItem: undefined, // sap.ui.core.Item, since 1.44
	selectedRow: undefined, // sap.m.ColumnListItem, since 1.44
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	valueHelpRequest: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	suggest: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.1
	suggestionItemSelected: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	submit: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.33.0
	tokenChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tokenUpdate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MultiInput xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	type="Text"
	maxLength="0"
	dateFormat="YYYY-MM-dd"
	showValueHelp="false"
	showSuggestion="false"
	valueHelpOnly="false"
	filterSuggests="true"
	maxSuggestionWidth=""
	startSuggestion="1"
	showTableSuggestionValueHelp="true"
	description=""
	fieldWidth="50%"
	valueLiveUpdate="false"
	selectedKey=""
	textFormatMode="Value"
	textFormatter=""
	suggestionRowValidator=""
	enableSuggestionsHighlighting="true"
	enableMultiLineMode="false"
	maxTokens=""
	ariaLabelledBy=""
	selectedItem=""
	selectedRow=""
	validateFieldGroup=""
	change=""
	liveChange=""
	valueHelpRequest=""
	suggest=""
	suggestionItemSelected=""
	submit=""
	tokenChange=""
	tokenUpdate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<suggestionItems></suggestionItems> <!-- sap.ui.core.Item, since 1.16.1 -->
		<suggestionColumns></suggestionColumns> <!-- sap.m.Column, since 1.21.1 -->
		<suggestionRows></suggestionRows> <!-- sap.m.ColumnListItem, since 1.21.1 -->
		<tokens></tokens> <!-- sap.m.Token -->
</MultiInput>
]]></xmlTemplate>
</Template>
<Template name="sap.m.NavContainer" alias="NavContainer,Container">
	<jsTemplate><![CDATA[new sap.m.NavContainer({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	autoFocus: true, // boolean, since 1.30
	height: "100%", // sap.ui.core.CSSSize
	width: "100%", // sap.ui.core.CSSSize
	visible: true, // boolean
	defaultTransitionName: "slide", // string, since 1.7.1
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	pages: [], // sap.ui.core.Control
	initialPage: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.7.1
	afterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.7.1
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<NavContainer xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	autoFocus="true"
	height="100%"
	width="100%"
	visible="true"
	defaultTransitionName="slide"
	initialPage=""
	validateFieldGroup=""
	navigate=""
	afterNavigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<pages></pages> <!-- sap.ui.core.Control -->
</NavContainer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.NewsContent" alias="NewsContent,Content">
	<jsTemplate><![CDATA[new sap.m.NewsContent({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	size: sap.m.Size.Auto, // sap.m.Size
	contentText: undefined, // string
	subheader: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<NewsContent xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	size="Auto"
	contentText=""
	subheader=""
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</NewsContent>
]]></xmlTemplate>
</Template>
<Template name="sap.m.NotificationListBase" alias="NotificationListBase,Base">
	<jsTemplate><![CDATA[new sap.m.NotificationListBase({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	priority: sap.ui.core.Priority.None, // sap.ui.core.Priority
	title: "", // string
	datetime: "", // string
	showButtons: true, // boolean
	showCloseButton: true, // boolean
	authorName: "", // string
	authorPicture: undefined, // sap.ui.core.URI
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	buttons: [], // sap.m.Button
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	close: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<NotificationListBase xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	priority="None"
	title=""
	datetime=""
	showButtons="true"
	showCloseButton="true"
	authorName=""
	authorPicture=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress=""
	close="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<buttons></buttons> <!-- sap.m.Button -->
</NotificationListBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.NotificationListGroup" alias="NotificationListGroup,Group">
	<jsTemplate><![CDATA[new sap.m.NotificationListGroup({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	priority: sap.ui.core.Priority.None, // sap.ui.core.Priority
	title: "", // string
	datetime: "", // string
	showButtons: true, // boolean
	showCloseButton: true, // boolean
	authorName: "", // string
	authorPicture: undefined, // sap.ui.core.URI
	collapsed: false, // boolean
	autoPriority: true, // boolean
	showEmptyGroup: false, // boolean
	enableCollapseButtonWhenEmpty: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	buttons: [], // sap.m.Button
	items: [], // sap.m.NotificationListItem
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	close: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	onCollapse: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.44
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<NotificationListGroup xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	priority="None"
	title=""
	datetime=""
	showButtons="true"
	showCloseButton="true"
	authorName=""
	authorPicture=""
	collapsed="false"
	autoPriority="true"
	showEmptyGroup="false"
	enableCollapseButtonWhenEmpty="false"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress=""
	close=""
	onCollapse="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<buttons></buttons> <!-- sap.m.Button -->
		<items></items> <!-- sap.m.NotificationListItem -->
</NotificationListGroup>
]]></xmlTemplate>
</Template>
<Template name="sap.m.NotificationListItem" alias="NotificationListItem,Item">
	<jsTemplate><![CDATA[new sap.m.NotificationListItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	priority: sap.ui.core.Priority.None, // sap.ui.core.Priority
	title: "", // string
	datetime: "", // string
	showButtons: true, // boolean
	showCloseButton: true, // boolean
	authorName: "", // string
	authorPicture: undefined, // sap.ui.core.URI
	description: "", // string
	truncate: true, // boolean
	hideShowMoreButton: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	buttons: [], // sap.m.Button
	processingMessage: undefined, // sap.m.MessageStrip
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	close: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<NotificationListItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	priority="None"
	title=""
	datetime=""
	showButtons="true"
	showCloseButton="true"
	authorName=""
	authorPicture=""
	description=""
	truncate="true"
	hideShowMoreButton="false"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress=""
	close="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<buttons></buttons> <!-- sap.m.Button -->
		<processingMessage></processingMessage> <!-- sap.m.MessageStrip -->
</NotificationListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.NumericContent" alias="NumericContent,Content">
	<jsTemplate><![CDATA[new sap.m.NumericContent({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	animateTextChange: true, // boolean
	formatterValue: false, // boolean
	icon: undefined, // sap.ui.core.URI
	iconDescription: undefined, // string
	indicator: sap.m.DeviationIndicator.None, // sap.m.DeviationIndicator
	nullifyValue: true, // boolean
	scale: undefined, // string
	size: sap.m.Size.Auto, // sap.m.Size
	truncateValueTo: 4, // int
	value: undefined, // string
	valueColor: sap.m.ValueColor.Neutral, // sap.m.ValueColor
	width: undefined, // sap.ui.core.CSSSize
	withMargin: true, // boolean
	state: sap.m.LoadState.Loaded, // sap.m.LoadState
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<NumericContent xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	animateTextChange="true"
	formatterValue="false"
	icon=""
	iconDescription=""
	indicator="None"
	nullifyValue="true"
	scale=""
	size="Auto"
	truncateValueTo="4"
	value=""
	valueColor="Neutral"
	width=""
	withMargin="true"
	state="Loaded"
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</NumericContent>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectAttribute" alias="ObjectAttribute,Attribute">
	<jsTemplate><![CDATA[new sap.m.ObjectAttribute({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	text: undefined, // string
	active: undefined, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	customContent: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectAttribute xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	text=""
	active=""
	textDirection="Inherit"
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<customContent></customContent> <!-- sap.ui.core.Control -->
</ObjectAttribute>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectHeader" alias="ObjectHeader,Header">
	<jsTemplate><![CDATA[new sap.m.ObjectHeader({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	number: undefined, // string
	numberUnit: undefined, // string
	intro: undefined, // string
	introActive: undefined, // boolean
	titleActive: undefined, // boolean
	icon: undefined, // sap.ui.core.URI
	iconActive: undefined, // boolean
	iconAlt: undefined, // string
	iconTooltip: undefined, // string
	iconDensityAware: true, // boolean
	markFavorite: false, // boolean, since 1.16.0
	markFlagged: false, // boolean, since 1.16.0
	showMarkers: false, // boolean, since 1.16.0
	showTitleSelector: false, // boolean, since 1.16.0
	numberState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.16.0
	condensed: false, // boolean
	backgroundDesign: undefined, // sap.m.BackgroundDesign
	responsive: false, // boolean, since 1.21.1
	fullScreenOptimized: false, // boolean, since 1.28
	titleHref: undefined, // sap.ui.core.URI, since 1.28
	titleTarget: undefined, // string, since 1.28
	introHref: undefined, // sap.ui.core.URI, since 1.28
	introTarget: undefined, // string, since 1.28
	titleTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	introTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	numberTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	titleSelectorTooltip: "Options", // string, since 1.30.0
	titleLevel: sap.ui.core.TitleLevel.H1, // sap.ui.core.TitleLevel
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	attributes: [], // sap.m.ObjectAttribute
	firstStatus: undefined, // sap.m.ObjectStatus
	secondStatus: undefined, // sap.m.ObjectStatus
	statuses: [], // sap.ui.core.Control, since 1.16.0
	additionalNumbers: [], // sap.m.ObjectNumber, since 1.38.0
	headerContainer: undefined, // sap.m.ObjectHeaderContainer, since 1.21.1
	markers: [], // sap.m.ObjectMarker
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	titlePress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	introPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	iconPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	titleSelectorPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.16.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectHeader xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	number=""
	numberUnit=""
	intro=""
	introActive=""
	titleActive=""
	icon=""
	iconActive=""
	iconAlt=""
	iconTooltip=""
	iconDensityAware="true"
	markFavorite="false"
	markFlagged="false"
	showMarkers="false"
	showTitleSelector="false"
	numberState="None"
	condensed="false"
	backgroundDesign=""
	responsive="false"
	fullScreenOptimized="false"
	titleHref=""
	titleTarget=""
	introHref=""
	introTarget=""
	titleTextDirection="Inherit"
	introTextDirection="Inherit"
	numberTextDirection="Inherit"
	titleSelectorTooltip="Options"
	titleLevel="H1"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	titlePress=""
	introPress=""
	iconPress=""
	titleSelectorPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<attributes></attributes> <!-- sap.m.ObjectAttribute -->
		<firstStatus></firstStatus> <!-- sap.m.ObjectStatus -->
		<secondStatus></secondStatus> <!-- sap.m.ObjectStatus -->
		<statuses></statuses> <!-- sap.ui.core.Control, since 1.16.0 -->
		<additionalNumbers></additionalNumbers> <!-- sap.m.ObjectNumber, since 1.38.0 -->
		<headerContainer></headerContainer> <!-- sap.m.ObjectHeaderContainer, since 1.21.1 -->
		<markers></markers> <!-- sap.m.ObjectMarker -->
</ObjectHeader>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectIdentifier" alias="ObjectIdentifier,Identifier">
	<jsTemplate><![CDATA[new sap.m.ObjectIdentifier({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	text: undefined, // string
	badgeNotes: undefined, // boolean
	badgePeople: undefined, // boolean
	badgeAttachments: undefined, // boolean
	visible: true, // boolean
	titleActive: false, // boolean, since 1.26
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	titlePress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.26
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectIdentifier xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	text=""
	badgeNotes=""
	badgePeople=""
	badgeAttachments=""
	visible="true"
	titleActive="false"
	textDirection="Inherit"
	ariaLabelledBy=""
	validateFieldGroup=""
	titlePress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ObjectIdentifier>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectListItem" alias="ObjectListItem,Item">
	<jsTemplate><![CDATA[new sap.m.ObjectListItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	title: undefined, // string
	number: undefined, // string
	numberUnit: undefined, // string
	intro: undefined, // string
	icon: undefined, // sap.ui.core.URI
	activeIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	markFavorite: undefined, // boolean, since 1.16.0
	markFlagged: undefined, // boolean, since 1.16.0
	showMarkers: undefined, // boolean, since 1.16.0
	numberState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.16.0
	titleTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	introTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	numberTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	markLocked: false, // boolean, since 1.28
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	attributes: [], // sap.m.ObjectAttribute
	firstStatus: undefined, // sap.m.ObjectStatus
	secondStatus: undefined, // sap.m.ObjectStatus
	markers: [], // sap.m.ObjectMarker
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectListItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	title=""
	number=""
	numberUnit=""
	intro=""
	icon=""
	activeIcon=""
	iconDensityAware="true"
	markFavorite=""
	markFlagged=""
	showMarkers=""
	numberState="None"
	titleTextDirection="Inherit"
	introTextDirection="Inherit"
	numberTextDirection="Inherit"
	markLocked="false"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<attributes></attributes> <!-- sap.m.ObjectAttribute -->
		<firstStatus></firstStatus> <!-- sap.m.ObjectStatus -->
		<secondStatus></secondStatus> <!-- sap.m.ObjectStatus -->
		<markers></markers> <!-- sap.m.ObjectMarker -->
</ObjectListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectMarker" alias="ObjectMarker,Marker">
	<jsTemplate><![CDATA[new sap.m.ObjectMarker({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: undefined, // sap.m.ObjectMarkerType
	visibility: undefined, // sap.m.ObjectMarkerVisibility
	additionalInfo: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectMarker xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type=""
	visibility=""
	additionalInfo=""
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ObjectMarker>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectNumber" alias="ObjectNumber,Number">
	<jsTemplate><![CDATA[new sap.m.ObjectNumber({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	number: undefined, // string
	numberUnit: undefined, // string
	emphasized: true, // boolean
	state: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	unit: undefined, // string, since 1.16.1
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	textAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectNumber xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	number=""
	numberUnit=""
	emphasized="true"
	state="None"
	unit=""
	textDirection="Inherit"
	textAlign="Begin"
	ariaDescribedBy=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ObjectNumber>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectStatus" alias="ObjectStatus,Status">
	<jsTemplate><![CDATA[new sap.m.ObjectStatus({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	text: undefined, // string
	active: false, // boolean, since 1.54
	state: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	icon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.54
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectStatus xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	text=""
	active="false"
	state="None"
	icon=""
	iconDensityAware="true"
	textDirection="Inherit"
	ariaDescribedBy=""
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ObjectStatus>
]]></xmlTemplate>
</Template>
<Template name="sap.m.OverflowToolbar" alias="OverflowToolbar,Toolbar">
	<jsTemplate><![CDATA[new sap.m.OverflowToolbar({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	width: undefined, // sap.ui.core.CSSSize
	active: false, // boolean
	enabled: true, // boolean
	height: "", // sap.ui.core.CSSSize
	design: sap.m.ToolbarDesign.Auto, // sap.m.ToolbarDesign, since 1.16.8
	style: sap.m.ToolbarStyle.Standard, // sap.m.ToolbarStyle, since 1.54
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<OverflowToolbar xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	width=""
	active="false"
	enabled="true"
	height=""
	design="Auto"
	style="Standard"
	ariaLabelledBy=""
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</OverflowToolbar>
]]></xmlTemplate>
</Template>
<Template name="sap.m.OverflowToolbarButton" alias="OverflowToolbarButton,Button">
	<jsTemplate><![CDATA[new sap.m.OverflowToolbarButton({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: undefined, // string
	type: sap.m.ButtonType.Default, // sap.m.ButtonType
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	icon: undefined, // sap.ui.core.URI
	iconFirst: true, // boolean
	activeIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<OverflowToolbarButton xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	type="Default"
	width=""
	enabled="true"
	icon=""
	iconFirst="true"
	activeIcon=""
	iconDensityAware="true"
	textDirection="Inherit"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</OverflowToolbarButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.OverflowToolbarLayoutData" alias="OverflowToolbarLayoutData,Data">
	<jsTemplate><![CDATA[new sap.m.OverflowToolbarLayoutData({
	id: "${id}", // sap.ui.core.ID
	shrinkable: false, // boolean
	minWidth: undefined, // sap.ui.core.CSSSize
	maxWidth: undefined, // sap.ui.core.CSSSize
	moveToOverflow: true, // boolean
	stayInOverflow: false, // boolean
	priority: sap.m.OverflowToolbarPriority.High, // sap.m.OverflowToolbarPriority, since 1.32
	group: 0, // int, since 1.32
	closeOverflowOnInteraction: true, // boolean, since 1.40
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<OverflowToolbarLayoutData xmlns="sap.m"
	id="${id}"
	shrinkable="false"
	minWidth=""
	maxWidth=""
	moveToOverflow="true"
	stayInOverflow="false"
	priority="High"
	group="0"
	closeOverflowOnInteraction="true">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</OverflowToolbarLayoutData>
]]></xmlTemplate>
</Template>
<Template name="sap.m.OverflowToolbarToggleButton" alias="OverflowToolbarToggleButton,Button">
	<jsTemplate><![CDATA[new sap.m.OverflowToolbarToggleButton({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: undefined, // string
	type: sap.m.ButtonType.Default, // sap.m.ButtonType
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	icon: undefined, // sap.ui.core.URI
	iconFirst: true, // boolean
	activeIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<OverflowToolbarToggleButton xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	type="Default"
	width=""
	enabled="true"
	icon=""
	iconFirst="true"
	activeIcon=""
	iconDensityAware="true"
	textDirection="Inherit"
	pressed="false"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</OverflowToolbarToggleButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nColumnsItem" alias="P13nColumnsItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nColumnsItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	columnKey: undefined, // string, since 1.26.0
	index: undefined, // int, since 1.26.0
	visible: undefined, // boolean, since 1.26.0
	width: undefined, // string, since 1.26.0
	total: undefined, // boolean, since 1.26.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nColumnsItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	columnKey=""
	index=""
	visible=""
	width=""
	total="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</P13nColumnsItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nColumnsPanel" alias="P13nColumnsPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nColumnsPanel({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string
	verticalScrolling: true, // boolean
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	changeNotifier: undefined, // object
	visibleItemsThreshold: -1, // int, since 1.26.7
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.P13nItem
	columnsItems: [], // sap.m.P13nColumnsItem, since 1.26.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.28.0
	addColumnsItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26.0
	changeColumnsItems: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26.7
	setData: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.26.7
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nColumnsPanel xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	changeNotifier=""
	visibleItemsThreshold="-1"
	validateFieldGroup=""
	beforeNavigationTo=""
	addColumnsItem=""
	changeColumnsItems=""
	setData="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.P13nItem -->
		<columnsItems></columnsItems> <!-- sap.m.P13nColumnsItem, since 1.26.0 -->
</P13nColumnsPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nConditionPanel" alias="P13nConditionPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nConditionPanel({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	maxConditions: "-1", // string
	exclude: false, // boolean
	containerQuery: false, // boolean
	autoAddNewRow: false, // boolean
	disableFirstRemoveIcon: false, // boolean
	alwaysShowAddIcon: true, // boolean
	usePrevConditionSetting: true, // boolean
	autoReduceKeyFieldItems: false, // boolean
	layoutMode: undefined, // string
	showLabel: false, // boolean
	displayFormat: undefined, // string
	validationExecutor: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	dataChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nConditionPanel xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	maxConditions="-1"
	exclude="false"
	containerQuery="false"
	autoAddNewRow="false"
	disableFirstRemoveIcon="false"
	alwaysShowAddIcon="true"
	usePrevConditionSetting="true"
	autoReduceKeyFieldItems="false"
	layoutMode=""
	showLabel="false"
	displayFormat=""
	validationExecutor=""
	validateFieldGroup=""
	dataChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</P13nConditionPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nDialog" alias="P13nDialog,Dialog">
	<jsTemplate><![CDATA[new sap.m.P13nDialog({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	icon: undefined, // sap.ui.core.URI
	title: undefined, // string
	showHeader: true, // boolean, since 1.15.1
	type: sap.m.DialogType.Standard, // sap.m.DialogType
	state: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.11.2
	stretchOnPhone: false, // boolean, since 1.11.2
	stretch: false, // boolean, since 1.13.1
	contentWidth: undefined, // sap.ui.core.CSSSize, since 1.12.1
	contentHeight: undefined, // sap.ui.core.CSSSize, since 1.12.1
	horizontalScrolling: true, // boolean, since 1.15.1
	verticalScrolling: true, // boolean, since 1.15.1
	resizable: false, // boolean, since 1.30
	draggable: false, // boolean, since 1.30
	escapeHandler: undefined, // any, since 1.44
	initialVisiblePanelType: undefined, // string
	showReset: false, // boolean
	showResetEnabled: false, // boolean, since 1.36.0
	validationExecutor: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	subHeader: undefined, // sap.m.IBar, since 1.12.2
	customHeader: undefined, // sap.m.IBar, since 1.15.1
	beginButton: undefined, // sap.m.Button, since 1.15.1
	endButton: undefined, // sap.m.Button, since 1.15.1
	buttons: [], // sap.m.Button, since 1.21.1
	panels: [], // sap.m.P13nPanel
	leftButton: undefined, // sap.m.Button
	rightButton: undefined, // sap.m.Button
	initialFocus: undefined, // sap.ui.core.Control, since 1.15.0
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	ok: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	cancel: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	reset: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nDialog xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	icon=""
	title=""
	showHeader="true"
	type="Standard"
	state="None"
	stretchOnPhone="false"
	stretch="false"
	contentWidth=""
	contentHeight=""
	horizontalScrolling="true"
	verticalScrolling="true"
	resizable="false"
	draggable="false"
	escapeHandler=""
	initialVisiblePanelType=""
	showReset="false"
	showResetEnabled="false"
	validationExecutor=""
	leftButton=""
	rightButton=""
	initialFocus=""
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	beforeOpen=""
	afterOpen=""
	beforeClose=""
	afterClose=""
	ok=""
	cancel=""
	reset="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
		<subHeader></subHeader> <!-- sap.m.IBar, since 1.12.2 -->
		<customHeader></customHeader> <!-- sap.m.IBar, since 1.15.1 -->
		<beginButton></beginButton> <!-- sap.m.Button, since 1.15.1 -->
		<endButton></endButton> <!-- sap.m.Button, since 1.15.1 -->
		<buttons></buttons> <!-- sap.m.Button, since 1.21.1 -->
		<panels></panels> <!-- sap.m.P13nPanel -->
</P13nDialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nDimMeasureItem" alias="P13nDimMeasureItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nDimMeasureItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	columnKey: undefined, // string
	index: -1, // int
	visible: undefined, // boolean
	role: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nDimMeasureItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	columnKey=""
	index="-1"
	visible=""
	role="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</P13nDimMeasureItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nDimMeasurePanel" alias="P13nDimMeasurePanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nDimMeasurePanel({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string
	verticalScrolling: true, // boolean
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	changeNotifier: undefined, // object
	chartTypeKey: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.P13nItem
	dimMeasureItems: [], // sap.m.P13nDimMeasureItem
	availableChartTypes: [], // sap.ui.core.Item
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.28.0
	changeDimMeasureItems: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.50.0
	changeChartType: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.50.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nDimMeasurePanel xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	changeNotifier=""
	chartTypeKey=""
	validateFieldGroup=""
	beforeNavigationTo=""
	changeDimMeasureItems=""
	changeChartType="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.P13nItem -->
		<dimMeasureItems></dimMeasureItems> <!-- sap.m.P13nDimMeasureItem -->
		<availableChartTypes></availableChartTypes> <!-- sap.ui.core.Item -->
</P13nDimMeasurePanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nFilterItem" alias="P13nFilterItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nFilterItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	operation: undefined, // string
	value1: undefined, // string
	value2: undefined, // string
	columnKey: undefined, // string
	exclude: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nFilterItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	operation=""
	value1=""
	value2=""
	columnKey=""
	exclude="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</P13nFilterItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nFilterPanel" alias="P13nFilterPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nFilterPanel({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string
	verticalScrolling: true, // boolean
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	changeNotifier: undefined, // object
	maxIncludes: "-1", // string
	maxExcludes: "-1", // string
	containerQuery: false, // boolean
	layoutMode: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.P13nItem
	filterItems: [], // sap.m.P13nFilterItem
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.28.0
	addFilterItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	removeFilterItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	updateFilterItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	filterItemChanged: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nFilterPanel xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	changeNotifier=""
	maxIncludes="-1"
	maxExcludes="-1"
	containerQuery="false"
	layoutMode=""
	validateFieldGroup=""
	beforeNavigationTo=""
	addFilterItem=""
	removeFilterItem=""
	updateFilterItem=""
	filterItemChanged="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.P13nItem -->
		<filterItems></filterItems> <!-- sap.m.P13nFilterItem -->
</P13nFilterPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nGroupItem" alias="P13nGroupItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nGroupItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	operation: undefined, // string
	columnKey: undefined, // string
	showIfGrouped: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nGroupItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	operation=""
	columnKey=""
	showIfGrouped="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</P13nGroupItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nGroupPanel" alias="P13nGroupPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nGroupPanel({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string
	verticalScrolling: true, // boolean
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	changeNotifier: undefined, // object
	maxGroups: "-1", // string
	containerQuery: false, // boolean
	layoutMode: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.P13nItem
	groupItems: [], // sap.m.P13nGroupItem
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.28.0
	addGroupItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	removeGroupItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	updateGroupItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nGroupPanel xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	changeNotifier=""
	maxGroups="-1"
	containerQuery="false"
	layoutMode=""
	validateFieldGroup=""
	beforeNavigationTo=""
	addGroupItem=""
	removeGroupItem=""
	updateGroupItem="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.P13nItem -->
		<groupItems></groupItems> <!-- sap.m.P13nGroupItem -->
</P13nGroupPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nItem" alias="P13nItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nItem({
	id: "${id}", // sap.ui.core.ID
	columnKey: undefined, // string
	text: "", // string
	visible: undefined, // boolean
	type: "text", // string
	typeInstance: undefined, // object
	precision: undefined, // string
	formatSettings: undefined, // object
	scale: undefined, // string
	maxLength: undefined, // string
	width: undefined, // string
	isDefault: false, // boolean
	values: undefined, // string[], since 1.34.0
	role: undefined, // string, since 1.34.0
	aggregationRole: undefined, // string, since 1.34.0
	href: undefined, // string, since 1.46.0
	target: undefined, // string
	press: undefined, // object, since 1.46.0
	description: undefined, // string, since 1.56.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nItem xmlns="sap.m"
	id="${id}"
	columnKey=""
	text=""
	visible=""
	type="text"
	typeInstance=""
	precision=""
	formatSettings=""
	scale=""
	maxLength=""
	width=""
	isDefault="false"
	values=""
	role=""
	aggregationRole=""
	href=""
	target=""
	press=""
	description="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</P13nItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nPanel" alias="P13nPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nPanel({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string
	verticalScrolling: true, // boolean
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	changeNotifier: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.P13nItem
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.28.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nPanel xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	changeNotifier=""
	validateFieldGroup=""
	beforeNavigationTo="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.P13nItem -->
</P13nPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nSortItem" alias="P13nSortItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nSortItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	operation: undefined, // string
	columnKey: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nSortItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	operation=""
	columnKey="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</P13nSortItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nSortPanel" alias="P13nSortPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nSortPanel({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string
	verticalScrolling: true, // boolean
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	changeNotifier: undefined, // object
	containerQuery: false, // boolean
	layoutMode: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.P13nItem
	sortItems: [], // sap.m.P13nSortItem
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.28.0
	addSortItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	removeSortItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	updateSortItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nSortPanel xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	changeNotifier=""
	containerQuery="false"
	layoutMode=""
	validateFieldGroup=""
	beforeNavigationTo=""
	addSortItem=""
	removeSortItem=""
	updateSortItem="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.P13nItem -->
		<sortItems></sortItems> <!-- sap.m.P13nSortItem -->
</P13nSortPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.PDFViewer" alias="PDFViewer">
	<jsTemplate><![CDATA[new sap.m.PDFViewer({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	height: "100%", // sap.ui.core.CSSSize
	width: "100%", // sap.ui.core.CSSSize
	source: undefined, // sap.ui.core.URI
	errorMessage: undefined, // string
	errorPlaceholderMessage: undefined, // string
	popupHeaderTitle: undefined, // string
	title: undefined, // string
	showDownloadButton: true, // boolean
	displayType: "sap.m.PDFViewerDisplayTypes.Auto", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	errorPlaceholder: undefined, // sap.ui.core.Control
	popupButtons: [], // sap.m.Button
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	loaded: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	error: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	sourceValidationFailed: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<PDFViewer xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	height="100%"
	width="100%"
	source=""
	errorMessage=""
	errorPlaceholderMessage=""
	popupHeaderTitle=""
	title=""
	showDownloadButton="true"
	displayType="sap.m.PDFViewerDisplayTypes.Auto"
	validateFieldGroup=""
	loaded=""
	error=""
	sourceValidationFailed="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<errorPlaceholder></errorPlaceholder> <!-- sap.ui.core.Control -->
		<popupButtons></popupButtons> <!-- sap.m.Button -->
</PDFViewer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Page" alias="Page">
	<jsTemplate><![CDATA[new sap.m.Page({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showHeader: true, // boolean
	showSubHeader: true, // boolean, since 1.28
	navButtonText: undefined, // string
	navButtonTooltip: undefined, // string
	enableScrolling: true, // boolean
	icon: undefined, // sap.ui.core.URI
	backgroundDesign: sap.m.PageBackgroundDesign.Standard, // sap.m.PageBackgroundDesign
	navButtonType: sap.m.ButtonType.Back, // sap.m.ButtonType, since 1.12
	showFooter: true, // boolean, since 1.13.1
	contentOnlyBusy: false, // boolean, since 1.29.0
	floatingFooter: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	customHeader: undefined, // sap.m.IBar
	footer: undefined, // sap.m.IBar
	subHeader: undefined, // sap.m.IBar
	headerContent: [], // sap.ui.core.Control
	landmarkInfo: undefined, // sap.m.PageAccessibleLandmarkInfo
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navButtonTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.12.2
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Page xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showHeader="true"
	showSubHeader="true"
	navButtonText=""
	navButtonTooltip=""
	enableScrolling="true"
	icon=""
	backgroundDesign="Standard"
	navButtonType="Back"
	showFooter="true"
	contentOnlyBusy="false"
	floatingFooter="false"
	validateFieldGroup=""
	navButtonTap=""
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeader></customHeader> <!-- sap.m.IBar -->
		<footer></footer> <!-- sap.m.IBar -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<headerContent></headerContent> <!-- sap.ui.core.Control -->
		<landmarkInfo></landmarkInfo> <!-- sap.m.PageAccessibleLandmarkInfo -->
</Page>
]]></xmlTemplate>
</Template>
<Template name="sap.m.PageAccessibleLandmarkInfo" alias="PageAccessibleLandmarkInfo,Info">
	<jsTemplate><![CDATA[new sap.m.PageAccessibleLandmarkInfo({
	id: "${id}", // sap.ui.core.ID
	rootRole: sap.ui.core.AccessibleLandmarkRole.Region, // sap.ui.core.AccessibleLandmarkRole
	rootLabel: undefined, // string
	contentRole: sap.ui.core.AccessibleLandmarkRole.Main, // sap.ui.core.AccessibleLandmarkRole
	contentLabel: undefined, // string
	headerRole: sap.ui.core.AccessibleLandmarkRole.Region, // sap.ui.core.AccessibleLandmarkRole
	headerLabel: undefined, // string
	subHeaderRole: sap.ui.core.AccessibleLandmarkRole.None, // sap.ui.core.AccessibleLandmarkRole
	subHeaderLabel: undefined, // string
	footerRole: sap.ui.core.AccessibleLandmarkRole.Region, // sap.ui.core.AccessibleLandmarkRole
	footerLabel: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<PageAccessibleLandmarkInfo xmlns="sap.m"
	id="${id}"
	rootRole="Region"
	rootLabel=""
	contentRole="Main"
	contentLabel=""
	headerRole="Region"
	headerLabel=""
	subHeaderRole="None"
	subHeaderLabel=""
	footerRole="Region"
	footerLabel="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</PageAccessibleLandmarkInfo>
]]></xmlTemplate>
</Template>
<Template name="sap.m.PagingButton" alias="PagingButton,Button">
	<jsTemplate><![CDATA[new sap.m.PagingButton({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	count: 1, // int
	position: 1, // int
	nextButtonTooltip: "", // string, since 1.36
	previousButtonTooltip: "", // string, since 1.36
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	positionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<PagingButton xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	count="1"
	position="1"
	nextButtonTooltip=""
	previousButtonTooltip=""
	validateFieldGroup=""
	positionChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</PagingButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Panel" alias="Panel">
	<jsTemplate><![CDATA[new sap.m.Panel({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	headerText: "", // string
	width: "100%", // sap.ui.core.CSSSize
	height: "auto", // sap.ui.core.CSSSize
	expandable: false, // boolean, since 1.22
	expanded: false, // boolean, since 1.22
	expandAnimation: true, // boolean, since 1.26
	backgroundDesign: sap.m.BackgroundDesign.Translucent, // sap.m.BackgroundDesign, since 1.30
	accessibleRole: sap.m.PanelAccessibleRole.Form, // sap.m.PanelAccessibleRole, since 1.46
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	expand: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.22
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Panel xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	headerText=""
	width="100%"
	height="auto"
	expandable="false"
	expanded="false"
	expandAnimation="true"
	backgroundDesign="Translucent"
	accessibleRole="Form"
	validateFieldGroup=""
	expand="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
</Panel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.PlanningCalendar" alias="PlanningCalendar,Calendar">
	<jsTemplate><![CDATA[new sap.m.PlanningCalendar({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	startDate: undefined, // object
	viewKey: "sap.ui.unified.CalendarIntervalType.Hour", // string
	singleSelection: true, // boolean
	width: undefined, // sap.ui.core.CSSSize
	height: undefined, // sap.ui.core.CSSSize
	showIntervalHeaders: true, // boolean
	showEmptyIntervalHeaders: true, // boolean, since 1.38.0
	showRowHeaders: true, // boolean
	noDataText: undefined, // string
	groupAppointmentsMode: sap.ui.unified.GroupAppointmentsMode.Collapsed, // sap.ui.unified.GroupAppointmentsMode, since 1.48.0
	appointmentsReducedHeight: false, // boolean, since 1.38.0
	appointmentsVisualization: sap.ui.unified.CalendarAppointmentVisualization.Standard, // sap.ui.unified.CalendarAppointmentVisualization, since 1.40.0
	minDate: undefined, // object, since 1.38.0
	maxDate: undefined, // object, since 1.38.0
	showDayNamesLine: false, // boolean, since 1.50
	showWeekNumbers: false, // boolean, since 1.52
	builtInViews: [], // string[], since 1.50
	stickyHeader: false, // boolean, since 1.54
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	rows: [], // sap.m.PlanningCalendarRow
	views: [], // sap.m.PlanningCalendarView
	specialDates: [], // sap.ui.unified.DateTypeRange
	toolbarContent: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.40.0
	legend: undefined, // sap.ui.unified.CalendarLegend, since 1.40.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	appointmentSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	intervalSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	rowSelectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	startDateChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	viewChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	rowHeaderClick: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.46.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<PlanningCalendar xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	startDate=""
	viewKey="sap.ui.unified.CalendarIntervalType.Hour"
	singleSelection="true"
	width=""
	height=""
	showIntervalHeaders="true"
	showEmptyIntervalHeaders="true"
	showRowHeaders="true"
	noDataText=""
	groupAppointmentsMode="Collapsed"
	appointmentsReducedHeight="false"
	appointmentsVisualization="Standard"
	minDate=""
	maxDate=""
	showDayNamesLine="false"
	showWeekNumbers="false"
	builtInViews=""
	stickyHeader="false"
	ariaLabelledBy=""
	legend=""
	validateFieldGroup=""
	appointmentSelect=""
	intervalSelect=""
	rowSelectionChange=""
	startDateChange=""
	viewChange=""
	rowHeaderClick="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<rows></rows> <!-- sap.m.PlanningCalendarRow -->
		<views></views> <!-- sap.m.PlanningCalendarView -->
		<specialDates></specialDates> <!-- sap.ui.unified.DateTypeRange -->
		<toolbarContent></toolbarContent> <!-- sap.ui.core.Control -->
</PlanningCalendar>
]]></xmlTemplate>
</Template>
<Template name="sap.m.PlanningCalendarLegend" alias="PlanningCalendarLegend,Legend">
	<jsTemplate><![CDATA[new sap.m.PlanningCalendarLegend({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	standardItems: [], // string[], since 1.54
	columnWidth: "120px", // sap.ui.core.CSSSize
	itemsHeader: "Calendar", // string
	appointmentItemsHeader: "Appointments", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.unified.CalendarLegendItem
	appointmentItems: [], // sap.ui.unified.CalendarLegendItem
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<PlanningCalendarLegend xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	standardItems=""
	columnWidth="120px"
	itemsHeader="Calendar"
	appointmentItemsHeader="Appointments"
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.unified.CalendarLegendItem -->
		<appointmentItems></appointmentItems> <!-- sap.ui.unified.CalendarLegendItem -->
</PlanningCalendarLegend>
]]></xmlTemplate>
</Template>
<Template name="sap.m.PlanningCalendarRow" alias="PlanningCalendarRow,Row">
	<jsTemplate><![CDATA[new sap.m.PlanningCalendarRow({
	id: "${id}", // sap.ui.core.ID
	title: undefined, // string
	text: undefined, // string
	icon: undefined, // sap.ui.core.URI
	nonWorkingDays: undefined, // int[]
	nonWorkingHours: undefined, // int[]
	selected: false, // boolean
	key: undefined, // string
	enableAppointmentsDragAndDrop: false, // boolean, since 1.54
	enableAppointmentsResize: false, // boolean, since 1.56
	enableAppointmentsCreate: false, // boolean, since 1.56
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	appointments: [], // sap.ui.unified.CalendarAppointment
	intervalHeaders: [], // sap.ui.unified.CalendarAppointment
	specialDates: [], // sap.ui.unified.DateTypeRange, since 1.56
	appointmentDrop: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.54
	appointmentDragEnter: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.56
	appointmentResize: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.56
	appointmentCreate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<PlanningCalendarRow xmlns="sap.m"
	id="${id}"
	title=""
	text=""
	icon=""
	nonWorkingDays=""
	nonWorkingHours=""
	selected="false"
	key=""
	enableAppointmentsDragAndDrop="false"
	enableAppointmentsResize="false"
	enableAppointmentsCreate="false"
	appointmentDrop=""
	appointmentDragEnter=""
	appointmentResize=""
	appointmentCreate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<appointments></appointments> <!-- sap.ui.unified.CalendarAppointment -->
		<intervalHeaders></intervalHeaders> <!-- sap.ui.unified.CalendarAppointment -->
		<specialDates></specialDates> <!-- sap.ui.unified.DateTypeRange, since 1.56 -->
</PlanningCalendarRow>
]]></xmlTemplate>
</Template>
<Template name="sap.m.PlanningCalendarView" alias="PlanningCalendarView,View">
	<jsTemplate><![CDATA[new sap.m.PlanningCalendarView({
	id: "${id}", // sap.ui.core.ID
	key: undefined, // string
	intervalType: sap.ui.unified.CalendarIntervalType.Hour, // sap.ui.unified.CalendarIntervalType
	description: undefined, // string
	intervalsS: 6, // int
	intervalsM: 8, // int
	intervalsL: 12, // int
	showSubIntervals: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<PlanningCalendarView xmlns="sap.m"
	id="${id}"
	key=""
	intervalType="Hour"
	description=""
	intervalsS="6"
	intervalsM="8"
	intervalsL="12"
	showSubIntervals="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</PlanningCalendarView>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Popover" alias="Popover">
	<jsTemplate><![CDATA[new sap.m.Popover({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	placement: sap.m.PlacementType.Right, // sap.m.PlacementType
	showHeader: true, // boolean
	title: undefined, // string
	modal: false, // boolean
	offsetX: 0, // int
	offsetY: 0, // int
	showArrow: true, // boolean, since 1.31
	contentWidth: undefined, // sap.ui.core.CSSSize, since 1.9.0
	contentMinWidth: "", // sap.ui.core.CSSSize, since 1.36
	contentHeight: undefined, // sap.ui.core.CSSSize, since 1.9.0
	enableScrolling: true, // boolean
	verticalScrolling: true, // boolean, since 1.15.0
	horizontalScrolling: true, // boolean, since 1.15.0
	bounce: undefined, // boolean, since 1.16.5
	resizable: false, // boolean, since 1.36.4
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	customHeader: undefined, // sap.ui.core.Control
	subHeader: undefined, // sap.ui.core.Control, since 1.15.1
	footer: undefined, // sap.ui.core.Control
	beginButton: undefined, // sap.ui.core.Control, since 1.15.1
	endButton: undefined, // sap.ui.core.Control, since 1.15.1
	leftButton: undefined, // sap.m.Button
	rightButton: undefined, // sap.m.Button
	initialFocus: undefined, // sap.ui.core.Control, since 1.15.0
	ariaLabelledBy: [], // sap.ui.core.Control
	ariaDescribedBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Popover xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	placement="Right"
	showHeader="true"
	title=""
	modal="false"
	offsetX="0"
	offsetY="0"
	showArrow="true"
	contentWidth=""
	contentMinWidth=""
	contentHeight=""
	enableScrolling="true"
	verticalScrolling="true"
	horizontalScrolling="true"
	bounce=""
	resizable="false"
	leftButton=""
	rightButton=""
	initialFocus=""
	ariaLabelledBy=""
	ariaDescribedBy=""
	validateFieldGroup=""
	afterOpen=""
	afterClose=""
	beforeOpen=""
	beforeClose="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeader></customHeader> <!-- sap.ui.core.Control -->
		<subHeader></subHeader> <!-- sap.ui.core.Control, since 1.15.1 -->
		<footer></footer> <!-- sap.ui.core.Control -->
		<beginButton></beginButton> <!-- sap.ui.core.Control, since 1.15.1 -->
		<endButton></endButton> <!-- sap.ui.core.Control, since 1.15.1 -->
</Popover>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ProgressIndicator" alias="ProgressIndicator,Indicator">
	<jsTemplate><![CDATA[new sap.m.ProgressIndicator({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	enabled: true, // boolean
	state: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	displayValue: undefined, // string
	percentValue: 0, // float
	showValue: true, // boolean
	width: "100%", // sap.ui.core.CSSSize
	height: undefined, // sap.ui.core.CSSSize, since 1.15.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	displayOnly: false, // boolean, since 1.50
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ProgressIndicator xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	enabled="true"
	state="None"
	displayValue=""
	percentValue="0"
	showValue="true"
	width="100%"
	height=""
	textDirection="Inherit"
	displayOnly="false"
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ProgressIndicator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.PullToRefresh" alias="PullToRefresh,Refresh">
	<jsTemplate><![CDATA[new sap.m.PullToRefresh({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	description: undefined, // string
	showIcon: false, // boolean
	customIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	refresh: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<PullToRefresh xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	description=""
	showIcon="false"
	customIcon=""
	iconDensityAware="true"
	validateFieldGroup=""
	refresh="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</PullToRefresh>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickView" alias="QuickView,View">
	<jsTemplate><![CDATA[new sap.m.QuickView({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	placement: sap.m.PlacementType.Right, // sap.m.PlacementType
	width: "320px", // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	pages: [], // sap.m.QuickViewPage
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickView xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	placement="Right"
	width="320px"
	validateFieldGroup=""
	navigate=""
	afterNavigate=""
	afterOpen=""
	afterClose=""
	beforeOpen=""
	beforeClose="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<pages></pages> <!-- sap.m.QuickViewPage -->
</QuickView>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickViewBase" alias="QuickViewBase,Base">
	<jsTemplate><![CDATA[new sap.m.QuickViewBase({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	pages: [], // sap.m.QuickViewPage
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickViewBase xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	validateFieldGroup=""
	navigate=""
	afterNavigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<pages></pages> <!-- sap.m.QuickViewPage -->
</QuickViewBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickViewCard" alias="QuickViewCard,Card">
	<jsTemplate><![CDATA[new sap.m.QuickViewCard({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	showVerticalScrollBar: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	pages: [], // sap.m.QuickViewPage
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickViewCard xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	showVerticalScrollBar="true"
	validateFieldGroup=""
	navigate=""
	afterNavigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<pages></pages> <!-- sap.m.QuickViewPage -->
</QuickViewCard>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickViewGroup" alias="QuickViewGroup,Group">
	<jsTemplate><![CDATA[new sap.m.QuickViewGroup({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	heading: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	elements: [] // sap.m.QuickViewGroupElement
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickViewGroup xmlns="sap.m"
	id="${id}"
	visible="true"
	heading="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<elements></elements> <!-- sap.m.QuickViewGroupElement -->
</QuickViewGroup>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickViewGroupElement" alias="QuickViewGroupElement,Element">
	<jsTemplate><![CDATA[new sap.m.QuickViewGroupElement({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	label: "", // string
	value: "", // string
	url: "", // string
	target: "_blank", // string
	type: sap.m.QuickViewGroupElementType.text, // sap.m.QuickViewGroupElementType
	pageLinkId: "", // string
	emailSubject: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickViewGroupElement xmlns="sap.m"
	id="${id}"
	visible="true"
	label=""
	value=""
	url=""
	target="_blank"
	type="text"
	pageLinkId=""
	emailSubject="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</QuickViewGroupElement>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickViewPage" alias="QuickViewPage,Page">
	<jsTemplate><![CDATA[new sap.m.QuickViewPage({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	pageId: "", // string
	header: "", // string
	title: "", // string
	titleUrl: "", // string
	crossAppNavCallback: undefined, // object
	description: "", // string
	icon: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	groups: [], // sap.m.QuickViewGroup
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickViewPage xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	pageId=""
	header=""
	title=""
	titleUrl=""
	crossAppNavCallback=""
	description=""
	icon=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<groups></groups> <!-- sap.m.QuickViewGroup -->
</QuickViewPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.RadioButton" alias="RadioButton,Button">
	<jsTemplate><![CDATA[new sap.m.RadioButton({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	enabled: true, // boolean
	selected: false, // boolean
	groupName: "sapMRbDefaultGroup", // string
	text: undefined, // string
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	width: "", // sap.ui.core.CSSSize
	useEntireWidth: false, // boolean, since 1.42
	activeHandling: true, // boolean
	editable: true, // boolean, since 1.25
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.25
	textAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign, since 1.28
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<RadioButton xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	enabled="true"
	selected="false"
	groupName="sapMRbDefaultGroup"
	text=""
	textDirection="Inherit"
	width=""
	useEntireWidth="false"
	activeHandling="true"
	editable="true"
	valueState="None"
	textAlign="Begin"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	select="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</RadioButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.RadioButtonGroup" alias="RadioButtonGroup,Group">
	<jsTemplate><![CDATA[new sap.m.RadioButtonGroup({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	width: undefined, // sap.ui.core.CSSSize
	columns: 1, // int
	editable: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	selectedIndex: 0, // int
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	buttons: [], // sap.m.RadioButton
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<RadioButtonGroup xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	width=""
	columns="1"
	editable="true"
	valueState="None"
	selectedIndex="0"
	enabled="true"
	textDirection="Inherit"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	select="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<buttons></buttons> <!-- sap.m.RadioButton -->
</RadioButtonGroup>
]]></xmlTemplate>
</Template>
<Template name="sap.m.RangeSlider" alias="RangeSlider,Slider">
	<jsTemplate><![CDATA[new sap.m.RangeSlider({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	width: "100%", // sap.ui.core.CSSSize
	enabled: true, // boolean
	name: "", // string
	min: 0, // float
	max: 100, // float
	step: 1, // float
	progress: true, // boolean
	value: 0, // float
	showHandleTooltip: true, // boolean, since 1.31
	showAdvancedTooltip: false, // boolean, since 1.42
	inputsAsTooltips: false, // boolean, since 1.42
	enableTickmarks: false, // boolean, since 1.44
	value2: 100, // float
	range: [], // float[]
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	scale: undefined, // sap.m.IScale, since 1.46
	customTooltips: [], // sap.m.SliderTooltipBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<RangeSlider xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	width="100%"
	enabled="true"
	name=""
	min="0"
	max="100"
	step="1"
	progress="true"
	value="0"
	showHandleTooltip="true"
	showAdvancedTooltip="false"
	inputsAsTooltips="false"
	enableTickmarks="false"
	value2="100"
	range=""
	ariaLabelledBy=""
	validateFieldGroup=""
	change=""
	liveChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<scale></scale> <!-- sap.m.IScale, since 1.46 -->
		<customTooltips></customTooltips> <!-- sap.m.SliderTooltipBase, since 1.56 -->
</RangeSlider>
]]></xmlTemplate>
</Template>
<Template name="sap.m.RatingIndicator" alias="RatingIndicator,Indicator">
	<jsTemplate><![CDATA[new sap.m.RatingIndicator({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	enabled: true, // boolean
	maxValue: 5, // int
	value: 0, // float
	iconSize: undefined, // sap.ui.core.CSSSize
	iconSelected: undefined, // sap.ui.core.URI
	iconUnselected: undefined, // sap.ui.core.URI
	iconHovered: undefined, // sap.ui.core.URI
	visualMode: sap.m.RatingIndicatorVisualMode.Half, // sap.m.RatingIndicatorVisualMode
	displayOnly: false, // boolean, since 1.50.0
	editable: true, // boolean, since 1.52.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<RatingIndicator xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	enabled="true"
	maxValue="5"
	value="0"
	iconSize=""
	iconSelected=""
	iconUnselected=""
	iconHovered=""
	visualMode="Half"
	displayOnly="false"
	editable="true"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	change=""
	liveChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</RatingIndicator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ResponsivePopover" alias="ResponsivePopover,Popover">
	<jsTemplate><![CDATA[new sap.m.ResponsivePopover({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	placement: sap.m.PlacementType.Right, // sap.m.PlacementType
	showHeader: true, // boolean
	title: undefined, // string
	icon: undefined, // sap.ui.core.URI
	modal: undefined, // boolean
	offsetX: undefined, // int
	offsetY: undefined, // int
	showArrow: true, // boolean
	contentWidth: undefined, // sap.ui.core.CSSSize
	contentHeight: undefined, // sap.ui.core.CSSSize
	horizontalScrolling: true, // boolean
	verticalScrolling: true, // boolean
	showCloseButton: true, // boolean
	resizable: false, // boolean, since 1.36.4
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	customHeader: undefined, // sap.m.IBar
	subHeader: undefined, // sap.m.IBar
	beginButton: undefined, // sap.m.Button
	endButton: undefined, // sap.m.Button
	initialFocus: undefined, // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	ariaDescribedBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ResponsivePopover xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	placement="Right"
	showHeader="true"
	title=""
	icon=""
	modal=""
	offsetX=""
	offsetY=""
	showArrow="true"
	contentWidth=""
	contentHeight=""
	horizontalScrolling="true"
	verticalScrolling="true"
	showCloseButton="true"
	resizable="false"
	initialFocus=""
	ariaLabelledBy=""
	ariaDescribedBy=""
	validateFieldGroup=""
	beforeOpen=""
	afterOpen=""
	beforeClose=""
	afterClose="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeader></customHeader> <!-- sap.m.IBar -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<beginButton></beginButton> <!-- sap.m.Button -->
		<endButton></endButton> <!-- sap.m.Button -->
</ResponsivePopover>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ResponsiveScale" alias="ResponsiveScale,Scale">
	<jsTemplate><![CDATA[new sap.m.ResponsiveScale({
	id: "${id}", // sap.ui.core.ID
	tickmarksBetweenLabels: 0, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ResponsiveScale xmlns="sap.m"
	id="${id}"
	tickmarksBetweenLabels="0">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ResponsiveScale>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ScrollContainer" alias="ScrollContainer,Container">
	<jsTemplate><![CDATA[new sap.m.ScrollContainer({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	width: "auto", // sap.ui.core.CSSSize
	height: "auto", // sap.ui.core.CSSSize
	horizontal: true, // boolean
	vertical: false, // boolean
	focusable: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ScrollContainer xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	width="auto"
	height="auto"
	horizontal="true"
	vertical="false"
	focusable="false"
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</ScrollContainer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SearchField" alias="SearchField,Field">
	<jsTemplate><![CDATA[new sap.m.SearchField({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	visible: true, // boolean
	maxLength: 0, // int
	placeholder: undefined, // string
	showMagnifier: true, // boolean
	showRefreshButton: false, // boolean, since 1.16
	refreshButtonTooltip: undefined, // string, since 1.16
	showSearchButton: true, // boolean, since 1.23
	enableSuggestions: false, // boolean, since 1.34
	selectOnFocus: true, // boolean, since 1.20
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	suggestionItems: [], // sap.m.SuggestionItem, since 1.34
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	search: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.9.1
	suggest: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.34
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SearchField xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	visible="true"
	maxLength="0"
	placeholder=""
	showMagnifier="true"
	showRefreshButton="false"
	refreshButtonTooltip=""
	showSearchButton="true"
	enableSuggestions="false"
	selectOnFocus="true"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	search=""
	liveChange=""
	suggest="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<suggestionItems></suggestionItems> <!-- sap.m.SuggestionItem, since 1.34 -->
</SearchField>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SegmentedButton" alias="SegmentedButton,Button">
	<jsTemplate><![CDATA[new sap.m.SegmentedButton({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	selectedKey: "", // string, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	buttons: [], // sap.m.Button
	items: [], // sap.m.SegmentedButtonItem, since 1.28
	selectedButton: undefined, // sap.m.Button
	selectedItem: undefined, // sap.m.SegmentedButtonItem, since 1.52
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.52
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SegmentedButton xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	width=""
	enabled="true"
	selectedKey=""
	selectedButton=""
	selectedItem=""
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	select=""
	selectionChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<buttons></buttons> <!-- sap.m.Button -->
		<items></items> <!-- sap.m.SegmentedButtonItem, since 1.28 -->
</SegmentedButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SegmentedButtonItem" alias="SegmentedButtonItem,Item">
	<jsTemplate><![CDATA[new sap.m.SegmentedButtonItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	icon: undefined, // string
	visible: true, // boolean
	width: undefined, // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SegmentedButtonItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	icon=""
	visible="true"
	width=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</SegmentedButtonItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Select" alias="Select">
	<jsTemplate><![CDATA[new sap.m.Select({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	name: "", // string
	enabled: true, // boolean
	width: "auto", // sap.ui.core.CSSSize
	maxWidth: "100%", // sap.ui.core.CSSSize
	selectedKey: "", // string, since 1.11
	selectedItemId: "", // string, since 1.12
	icon: "", // sap.ui.core.URI, since 1.16
	type: sap.m.SelectType.Default, // sap.m.SelectType, since 1.16
	autoAdjustWidth: false, // boolean, since 1.16
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.28
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.40.2
	valueStateText: "", // string, since 1.40.5
	showSecondaryValues: false, // boolean, since 1.40
	forceSelection: true, // boolean, since 1.34
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Select xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	name=""
	enabled="true"
	width="auto"
	maxWidth="100%"
	selectedKey=""
	selectedItemId=""
	icon=""
	type="Default"
	autoAdjustWidth="false"
	textAlign="Initial"
	textDirection="Inherit"
	valueState="None"
	valueStateText=""
	showSecondaryValues="false"
	forceSelection="true"
	selectedItem=""
	ariaLabelledBy=""
	validateFieldGroup=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Item -->
</Select>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SelectDialog" alias="SelectDialog,Dialog">
	<jsTemplate><![CDATA[new sap.m.SelectDialog({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	noDataText: undefined, // string
	multiSelect: false, // boolean
	growingThreshold: undefined, // int
	growing: true, // boolean, since 1.56
	contentWidth: undefined, // sap.ui.core.CSSSize, since 1.18
	rememberSelections: false, // boolean, since 1.18
	contentHeight: undefined, // sap.ui.core.CSSSize
	showClearButton: false, // boolean, since 1.58
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.ListItemBase
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	confirm: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	search: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	cancel: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SelectDialog xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	noDataText=""
	multiSelect="false"
	growingThreshold=""
	growing="true"
	contentWidth=""
	rememberSelections="false"
	contentHeight=""
	showClearButton="false"
	validateFieldGroup=""
	confirm=""
	search=""
	liveChange=""
	cancel="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.ListItemBase -->
</SelectDialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SelectList" alias="SelectList,List">
	<jsTemplate><![CDATA[new sap.m.SelectList({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	enabled: true, // boolean
	width: "auto", // sap.ui.core.CSSSize
	maxWidth: "100%", // sap.ui.core.CSSSize
	selectedKey: "", // string
	selectedItemId: "", // string
	showSecondaryValues: false, // boolean, since 1.32.3
	keyboardNavigationMode: sap.m.SelectListKeyboardNavigationMode.Delimited, // sap.m.SelectListKeyboardNavigationMode, since 1.38
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.32.4
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SelectList xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	enabled="true"
	width="auto"
	maxWidth="100%"
	selectedKey=""
	selectedItemId=""
	showSecondaryValues="false"
	keyboardNavigationMode="Delimited"
	selectedItem=""
	ariaLabelledBy=""
	validateFieldGroup=""
	selectionChange=""
	itemPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Item -->
</SelectList>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Shell" alias="Shell">
	<jsTemplate><![CDATA[new sap.m.Shell({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	logo: undefined, // sap.ui.core.URI
	showLogout: true, // boolean
	headerRightText: undefined, // string
	appWidthLimited: true, // boolean
	backgroundColor: undefined, // sap.ui.core.CSSColor, since 1.11.2
	backgroundImage: undefined, // sap.ui.core.URI, since 1.11.2
	backgroundRepeat: false, // boolean, since 1.11.2
	backgroundOpacity: 1, // float, since 1.11.2
	homeIcon: undefined, // object
	titleLevel: sap.ui.core.TitleLevel.H1, // sap.ui.core.TitleLevel
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	app: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	logout: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Shell xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	logo=""
	showLogout="true"
	headerRightText=""
	appWidthLimited="true"
	backgroundColor=""
	backgroundImage=""
	backgroundRepeat="false"
	backgroundOpacity="1"
	homeIcon=""
	titleLevel="H1"
	validateFieldGroup=""
	logout="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<app></app> <!-- sap.ui.core.Control -->
</Shell>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SlideTile" alias="SlideTile,Tile">
	<jsTemplate><![CDATA[new sap.m.SlideTile({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	displayTime: 5000, // int
	transitionTime: 500, // int
	scope: sap.m.GenericTileScope.Display, // sap.m.GenericTileScope, since 1.46.0
	sizeBehavior: sap.m.TileSizeBehavior.Responsive, // sap.m.TileSizeBehavior
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	tiles: [], // sap.m.GenericTile
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.46.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SlideTile xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	displayTime="5000"
	transitionTime="500"
	scope="Display"
	sizeBehavior="Responsive"
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<tiles></tiles> <!-- sap.m.GenericTile -->
</SlideTile>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Slider" alias="Slider">
	<jsTemplate><![CDATA[new sap.m.Slider({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	width: "100%", // sap.ui.core.CSSSize
	enabled: true, // boolean
	name: "", // string
	min: 0, // float
	max: 100, // float
	step: 1, // float
	progress: true, // boolean
	value: 0, // float
	showHandleTooltip: true, // boolean, since 1.31
	showAdvancedTooltip: false, // boolean, since 1.42
	inputsAsTooltips: false, // boolean, since 1.42
	enableTickmarks: false, // boolean, since 1.44
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	scale: undefined, // sap.m.IScale, since 1.46
	customTooltips: [], // sap.m.SliderTooltipBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Slider xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	width="100%"
	enabled="true"
	name=""
	min="0"
	max="100"
	step="1"
	progress="true"
	value="0"
	showHandleTooltip="true"
	showAdvancedTooltip="false"
	inputsAsTooltips="false"
	enableTickmarks="false"
	ariaLabelledBy=""
	validateFieldGroup=""
	change=""
	liveChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<scale></scale> <!-- sap.m.IScale, since 1.46 -->
		<customTooltips></customTooltips> <!-- sap.m.SliderTooltipBase, since 1.56 -->
</Slider>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SliderTooltipBase" alias="SliderTooltipBase,Base">
	<jsTemplate><![CDATA[new sap.m.SliderTooltipBase({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SliderTooltipBase xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</SliderTooltipBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SplitApp" alias="SplitApp,App">
	<jsTemplate><![CDATA[new sap.m.SplitApp({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	defaultTransitionNameDetail: "slide", // string
	defaultTransitionNameMaster: "slide", // string
	mode: sap.m.SplitAppMode.ShowHideMode, // sap.m.SplitAppMode
	masterButtonText: undefined, // string
	masterButtonTooltip: undefined, // string, since 1.48
	backgroundColor: undefined, // string, since 1.11.2
	backgroundImage: undefined, // sap.ui.core.URI, since 1.11.2
	backgroundRepeat: false, // boolean, since 1.11.2
	backgroundOpacity: 1, // float, since 1.11.2
	homeIcon: undefined, // any
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	masterPages: [], // sap.ui.core.Control
	detailPages: [], // sap.ui.core.Control
	initialDetail: undefined, // sap.ui.core.Control
	initialMaster: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	masterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	masterButton: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeMasterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeMasterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterDetailNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	orientationChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SplitApp xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	defaultTransitionNameDetail="slide"
	defaultTransitionNameMaster="slide"
	mode="ShowHideMode"
	masterButtonText=""
	masterButtonTooltip=""
	backgroundColor=""
	backgroundImage=""
	backgroundRepeat="false"
	backgroundOpacity="1"
	homeIcon=""
	initialDetail=""
	initialMaster=""
	validateFieldGroup=""
	masterNavigate=""
	afterMasterNavigate=""
	masterButton=""
	beforeMasterOpen=""
	afterMasterOpen=""
	beforeMasterClose=""
	afterMasterClose=""
	detailNavigate=""
	afterDetailNavigate=""
	orientationChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<masterPages></masterPages> <!-- sap.ui.core.Control -->
		<detailPages></detailPages> <!-- sap.ui.core.Control -->
</SplitApp>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SplitContainer" alias="SplitContainer,Container">
	<jsTemplate><![CDATA[new sap.m.SplitContainer({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	defaultTransitionNameDetail: "slide", // string
	defaultTransitionNameMaster: "slide", // string
	mode: sap.m.SplitAppMode.ShowHideMode, // sap.m.SplitAppMode
	masterButtonText: undefined, // string
	masterButtonTooltip: undefined, // string, since 1.48
	backgroundColor: undefined, // string, since 1.11.2
	backgroundImage: undefined, // sap.ui.core.URI, since 1.11.2
	backgroundRepeat: false, // boolean, since 1.11.2
	backgroundOpacity: 1, // float, since 1.11.2
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	masterPages: [], // sap.ui.core.Control
	detailPages: [], // sap.ui.core.Control
	initialDetail: undefined, // sap.ui.core.Control
	initialMaster: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	masterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	masterButton: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeMasterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeMasterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterDetailNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SplitContainer xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	defaultTransitionNameDetail="slide"
	defaultTransitionNameMaster="slide"
	mode="ShowHideMode"
	masterButtonText=""
	masterButtonTooltip=""
	backgroundColor=""
	backgroundImage=""
	backgroundRepeat="false"
	backgroundOpacity="1"
	initialDetail=""
	initialMaster=""
	validateFieldGroup=""
	masterNavigate=""
	afterMasterNavigate=""
	masterButton=""
	beforeMasterOpen=""
	afterMasterOpen=""
	beforeMasterClose=""
	afterMasterClose=""
	detailNavigate=""
	afterDetailNavigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<masterPages></masterPages> <!-- sap.ui.core.Control -->
		<detailPages></detailPages> <!-- sap.ui.core.Control -->
</SplitContainer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.StandardListItem" alias="StandardListItem,Item">
	<jsTemplate><![CDATA[new sap.m.StandardListItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	title: undefined, // string
	description: undefined, // string
	icon: undefined, // sap.ui.core.URI
	iconInset: true, // boolean
	iconDensityAware: true, // boolean
	activeIcon: undefined, // sap.ui.core.URI
	info: undefined, // string
	infoState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	adaptTitleSize: true, // boolean, since 1.16.3
	titleTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	infoTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<StandardListItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	title=""
	description=""
	icon=""
	iconInset="true"
	iconDensityAware="true"
	activeIcon=""
	info=""
	infoState="None"
	adaptTitleSize="true"
	titleTextDirection="Inherit"
	infoTextDirection="Inherit"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</StandardListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.StandardTile" alias="StandardTile,Tile">
	<jsTemplate><![CDATA[new sap.m.StandardTile({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	removable: true, // boolean
	title: undefined, // string
	info: undefined, // string
	icon: undefined, // sap.ui.core.URI
	activeIcon: undefined, // sap.ui.core.URI
	number: undefined, // string
	numberUnit: undefined, // string
	infoState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	type: sap.m.StandardTileType.None, // sap.m.StandardTileType
	iconDensityAware: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<StandardTile xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	removable="true"
	title=""
	info=""
	icon=""
	activeIcon=""
	number=""
	numberUnit=""
	infoState="None"
	type="None"
	iconDensityAware="true"
	ariaDescribedBy=""
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</StandardTile>
]]></xmlTemplate>
</Template>
<Template name="sap.m.StandardTreeItem" alias="StandardTreeItem,Item">
	<jsTemplate><![CDATA[new sap.m.StandardTreeItem({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	title: "", // string
	icon: undefined, // sap.ui.core.URI
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<StandardTreeItem xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	title=""
	icon=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</StandardTreeItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.StepInput" alias="StepInput,Input">
	<jsTemplate><![CDATA[new sap.m.StepInput({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	min: undefined, // float
	max: undefined, // float
	step: 1, // float
	stepMode: sap.m.StepInputStepModeType.AdditionAndSubtraction, // sap.m.StepInputStepModeType, since 1.54
	largerStep: 2, // float
	value: 0, // float
	name: undefined, // string, since 1.44.15
	placeholder: undefined, // string, since 1.44.15
	required: false, // boolean, since 1.44.15
	width: undefined, // sap.ui.core.CSSSize
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	valueStateText: undefined, // string, since 1.52
	editable: true, // boolean
	enabled: true, // boolean
	displayValuePrecision: 0, // int, since 1.46
	description: undefined, // string, since 1.54
	fieldWidth: "50%", // sap.ui.core.CSSSize, since 1.54
	textAlign: sap.ui.core.TextAlign.End, // sap.ui.core.TextAlign, since 1.54
	validationMode: sap.m.StepInputValidationMode.FocusOut, // sap.m.StepInputValidationMode, since 1.54
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control
	ariaDescribedBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<StepInput xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	min=""
	max=""
	step="1"
	stepMode="AdditionAndSubtraction"
	largerStep="2"
	value="0"
	name=""
	placeholder=""
	required="false"
	width=""
	valueState="None"
	valueStateText=""
	editable="true"
	enabled="true"
	displayValuePrecision="0"
	description=""
	fieldWidth="50%"
	textAlign="End"
	validationMode="FocusOut"
	ariaLabelledBy=""
	ariaDescribedBy=""
	validateFieldGroup=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</StepInput>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SuggestionItem" alias="SuggestionItem,Item">
	<jsTemplate><![CDATA[new sap.m.SuggestionItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	icon: "", // string
	description: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SuggestionItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	icon=""
	description="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</SuggestionItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Switch" alias="Switch">
	<jsTemplate><![CDATA[new sap.m.Switch({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	state: false, // boolean
	customTextOn: "", // string
	customTextOff: "", // string
	enabled: true, // boolean
	name: "", // string
	type: sap.m.SwitchType.Default, // sap.m.SwitchType
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Switch xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	state="false"
	customTextOn=""
	customTextOff=""
	enabled="true"
	name=""
	type="Default"
	ariaLabelledBy=""
	validateFieldGroup=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</Switch>
]]></xmlTemplate>
</Template>
<Template name="sap.m.TabContainer" alias="TabContainer,Container">
	<jsTemplate><![CDATA[new sap.m.TabContainer({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	showAddNewButton: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.TabContainerItem
	selectedItem: undefined, // sap.m.TabContainerItem
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	itemClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	itemSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	addNewButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<TabContainer xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	showAddNewButton="false"
	selectedItem=""
	validateFieldGroup=""
	itemClose=""
	itemSelect=""
	addNewButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.TabContainerItem -->
</TabContainer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.TabContainerItem" alias="TabContainerItem,Item">
	<jsTemplate><![CDATA[new sap.m.TabContainerItem({
	id: "${id}", // sap.ui.core.ID
	name: "", // string
	key: undefined, // string
	modified: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	itemPropertyChanged: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<TabContainerItem xmlns="sap.m"
	id="${id}"
	name=""
	key=""
	modified="false"
	itemPropertyChanged="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</TabContainerItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Table" alias="Table">
	<jsTemplate><![CDATA[new sap.m.Table({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16.0
	growingThreshold: 20, // int, since 1.16.0
	growingTriggerText: undefined, // string, since 1.16.0
	growingScrollToLoad: false, // boolean, since 1.16.0
	growingDirection: sap.m.ListGrowingDirection.Downwards, // sap.m.ListGrowingDirection, since 1.40.0
	rememberSelections: true, // boolean, since 1.16.6
	keyboardMode: sap.m.ListKeyboardMode.Navigation, // sap.m.ListKeyboardMode, since 1.38.0
	sticky: undefined, // sap.m.Sticky[], since 1.58
	backgroundDesign: sap.m.BackgroundDesign.Translucent, // sap.m.BackgroundDesign
	fixedLayout: true, // boolean, since 1.22
	showOverlay: false, // boolean, since 1.22.1
	alternateRowColors: false, // boolean, since 1.52
	popinLayout: sap.m.PopinLayout.Block, // sap.m.PopinLayout, since 1.52
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	contextMenu: undefined, // sap.ui.core.IContextMenu, since 1.54
	columns: [], // sap.m.Column
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.20
	beforeOpenContextMenu: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.54
	beforeOpenContextMenu: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.54
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Table xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	growingDirection="Downwards"
	rememberSelections="true"
	keyboardMode="Navigation"
	sticky=""
	backgroundDesign="Translucent"
	fixedLayout="true"
	showOverlay="false"
	alternateRowColors="false"
	popinLayout="Block"
	ariaLabelledBy=""
	validateFieldGroup=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress=""
	beforeOpenContextMenu=""
	beforeOpenContextMenu="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<contextMenu></contextMenu> <!-- sap.ui.core.IContextMenu, since 1.54 -->
		<columns></columns> <!-- sap.m.Column -->
</Table>
]]></xmlTemplate>
</Template>
<Template name="sap.m.TableSelectDialog" alias="TableSelectDialog,Dialog">
	<jsTemplate><![CDATA[new sap.m.TableSelectDialog({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	noDataText: undefined, // string
	multiSelect: false, // boolean
	growing: true, // boolean, since 1.56
	growingThreshold: undefined, // int
	contentWidth: undefined, // sap.ui.core.CSSSize, since 1.18
	rememberSelections: false, // boolean, since 1.18
	contentHeight: undefined, // sap.ui.core.CSSSize
	showClearButton: false, // boolean, since 1.58
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.ColumnListItem
	columns: [], // sap.m.Column
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	confirm: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	search: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	cancel: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<TableSelectDialog xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	noDataText=""
	multiSelect="false"
	growing="true"
	growingThreshold=""
	contentWidth=""
	rememberSelections="false"
	contentHeight=""
	showClearButton="false"
	validateFieldGroup=""
	confirm=""
	search=""
	liveChange=""
	cancel="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.ColumnListItem -->
		<columns></columns> <!-- sap.m.Column -->
</TableSelectDialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Text" alias="Text">
	<jsTemplate><![CDATA[new sap.m.Text({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: "", // string
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	wrapping: true, // boolean
	textAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	width: undefined, // sap.ui.core.CSSSize
	maxLines: undefined, // int, since 1.13.2
	renderWhitespace: false, // boolean, since 1.51
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Text xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	textDirection="Inherit"
	wrapping="true"
	textAlign="Begin"
	width=""
	maxLines=""
	renderWhitespace="false"
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</Text>
]]></xmlTemplate>
</Template>
<Template name="sap.m.TextArea" alias="TextArea,Area">
	<jsTemplate><![CDATA[new sap.m.TextArea({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	required: false, // boolean, since 1.38.4
	rows: 2, // int
	cols: 20, // int
	height: undefined, // sap.ui.core.CSSSize
	maxLength: 0, // int
	showExceededText: false, // boolean, since 1.48
	wrapping: sap.ui.core.Wrapping.None, // sap.ui.core.Wrapping
	valueLiveUpdate: false, // boolean, since 1.30
	growing: false, // boolean, since 1.38.0
	growingMaxLines: 0, // int, since 1.38.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<TextArea xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	required="false"
	rows="2"
	cols="20"
	height=""
	maxLength="0"
	showExceededText="false"
	wrapping="None"
	valueLiveUpdate="false"
	growing="false"
	growingMaxLines="0"
	ariaLabelledBy=""
	validateFieldGroup=""
	change=""
	liveChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</TextArea>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Tile" alias="Tile">
	<jsTemplate><![CDATA[new sap.m.Tile({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	removable: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Tile xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	removable="true"
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</Tile>
]]></xmlTemplate>
</Template>
<Template name="sap.m.TileContainer" alias="TileContainer,Container">
	<jsTemplate><![CDATA[new sap.m.TileContainer({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	width: "100%", // sap.ui.core.CSSSize
	height: "100%", // sap.ui.core.CSSSize
	editable: undefined, // boolean
	allowAdd: undefined, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	tiles: [], // sap.m.Tile
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tileMove: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tileDelete: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tileAdd: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<TileContainer xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	width="100%"
	height="100%"
	editable=""
	allowAdd=""
	validateFieldGroup=""
	tileMove=""
	tileDelete=""
	tileAdd="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<tiles></tiles> <!-- sap.m.Tile -->
</TileContainer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.TileContent" alias="TileContent,Content">
	<jsTemplate><![CDATA[new sap.m.TileContent({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	footer: undefined, // string
	footerColor: sap.m.ValueColor.Neutral, // sap.m.ValueColor, since 1.44
	size: sap.m.Size.Auto, // sap.m.Size
	unit: undefined, // string
	disabled: false, // boolean
	frameType: sap.m.FrameType.Auto, // sap.m.FrameType
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: undefined, // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<TileContent xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	footer=""
	footerColor="Neutral"
	size="Auto"
	unit=""
	disabled="false"
	frameType="Auto"
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</TileContent>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Title" alias="Title">
	<jsTemplate><![CDATA[new sap.m.Title({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: undefined, // string
	level: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	titleStyle: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	width: undefined, // sap.ui.core.CSSSize
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign
	wrapping: false, // boolean, since 1.52
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	title: undefined, // sap.ui.core.Title
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Title xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	level="Auto"
	titleStyle="Auto"
	width=""
	textAlign="Initial"
	wrapping="false"
	title=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</Title>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ToggleButton" alias="ToggleButton,Button">
	<jsTemplate><![CDATA[new sap.m.ToggleButton({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	text: undefined, // string
	type: sap.m.ButtonType.Default, // sap.m.ButtonType
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	icon: undefined, // sap.ui.core.URI
	iconFirst: true, // boolean
	activeIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ToggleButton xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	text=""
	type="Default"
	width=""
	enabled="true"
	icon=""
	iconFirst="true"
	activeIcon=""
	iconDensityAware="true"
	textDirection="Inherit"
	pressed="false"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ToggleButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Token" alias="Token">
	<jsTemplate><![CDATA[new sap.m.Token({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	selected: false, // boolean
	key: "", // string
	text: "", // string
	editable: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	deselect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Token xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	selected="false"
	key=""
	text=""
	editable="true"
	textDirection="Inherit"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	"delete"=""
	press=""
	select=""
	deselect="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</Token>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Tokenizer" alias="Tokenizer">
	<jsTemplate><![CDATA[new sap.m.Tokenizer({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	editable: true, // boolean
	width: undefined, // sap.ui.core.CSSSize
	maxWidth: "100%", // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	tokens: [], // sap.m.Token
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tokenChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tokenUpdate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Tokenizer xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	editable="true"
	width=""
	maxWidth="100%"
	ariaDescribedBy=""
	ariaLabelledBy=""
	validateFieldGroup=""
	tokenChange=""
	tokenUpdate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<tokens></tokens> <!-- sap.m.Token -->
</Tokenizer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Toolbar" alias="Toolbar">
	<jsTemplate><![CDATA[new sap.m.Toolbar({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	width: undefined, // sap.ui.core.CSSSize
	active: false, // boolean
	enabled: true, // boolean
	height: "", // sap.ui.core.CSSSize
	design: sap.m.ToolbarDesign.Auto, // sap.m.ToolbarDesign, since 1.16.8
	style: sap.m.ToolbarStyle.Standard, // sap.m.ToolbarStyle, since 1.54
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Toolbar xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	width=""
	active="false"
	enabled="true"
	height=""
	design="Auto"
	style="Standard"
	ariaLabelledBy=""
	validateFieldGroup=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</Toolbar>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ToolbarLayoutData" alias="ToolbarLayoutData,Data">
	<jsTemplate><![CDATA[new sap.m.ToolbarLayoutData({
	id: "${id}", // sap.ui.core.ID
	shrinkable: false, // boolean
	minWidth: undefined, // sap.ui.core.CSSSize
	maxWidth: undefined, // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ToolbarLayoutData xmlns="sap.m"
	id="${id}"
	shrinkable="false"
	minWidth=""
	maxWidth="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ToolbarLayoutData>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ToolbarSeparator" alias="ToolbarSeparator,Separator">
	<jsTemplate><![CDATA[new sap.m.ToolbarSeparator({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ToolbarSeparator xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ToolbarSeparator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ToolbarSpacer" alias="ToolbarSpacer,Spacer">
	<jsTemplate><![CDATA[new sap.m.ToolbarSpacer({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	width: "", // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ToolbarSpacer xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	width=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ToolbarSpacer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Tree" alias="Tree">
	<jsTemplate><![CDATA[new sap.m.Tree({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16.0
	growingThreshold: 20, // int, since 1.16.0
	growingTriggerText: undefined, // string, since 1.16.0
	growingScrollToLoad: false, // boolean, since 1.16.0
	growingDirection: sap.m.ListGrowingDirection.Downwards, // sap.m.ListGrowingDirection, since 1.40.0
	rememberSelections: true, // boolean, since 1.16.6
	keyboardMode: sap.m.ListKeyboardMode.Navigation, // sap.m.ListKeyboardMode, since 1.38.0
	sticky: undefined, // sap.m.Sticky[], since 1.58
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	contextMenu: undefined, // sap.ui.core.IContextMenu, since 1.54
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.20
	beforeOpenContextMenu: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.54
	toggleOpenState: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.50
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Tree xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	growingDirection="Downwards"
	rememberSelections="true"
	keyboardMode="Navigation"
	sticky=""
	ariaLabelledBy=""
	validateFieldGroup=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress=""
	beforeOpenContextMenu=""
	toggleOpenState="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<contextMenu></contextMenu> <!-- sap.ui.core.IContextMenu, since 1.54 -->
</Tree>
]]></xmlTemplate>
</Template>
<Template name="sap.m.TreeItemBase" alias="TreeItemBase,Base">
	<jsTemplate><![CDATA[new sap.m.TreeItemBase({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	highlight: sap.ui.core.MessageType.None, // sap.ui.core.MessageType, since 1.44.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<TreeItemBase xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	highlight="None"
	ariaLabelledBy=""
	validateFieldGroup=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</TreeItemBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.UploadCollection" alias="UploadCollection,Collection">
	<jsTemplate><![CDATA[new sap.m.UploadCollection({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	fileType: undefined, // string[]
	maximumFilenameLength: undefined, // int
	maximumFileSize: undefined, // float
	mimeType: undefined, // string[]
	multiple: false, // boolean
	noDataText: undefined, // string
	noDataDescription: undefined, // string, since 1.46.0
	sameFilenameAllowed: false, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	uploadEnabled: true, // boolean
	uploadUrl: "../../../upload", // string
	instantUpload: true, // boolean, since 1.30.0
	numberOfAttachmentsText: undefined, // string, since 1.30.0
	mode: sap.m.ListMode.None, // sap.m.ListMode, since 1.34.0
	uploadButtonInvisible: false, // boolean, since 1.42.0
	terminationEnabled: true, // boolean, since 1.42.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.UploadCollectionItem
	headerParameters: [], // sap.m.UploadCollectionParameter
	parameters: [], // sap.m.UploadCollectionParameter
	toolbar: undefined, // sap.m.OverflowToolbar, since 1.34.0
	infoToolbar: undefined, // sap.m.Toolbar, since 1.44.0
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	fileDeleted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	filenameLengthExceed: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	fileRenamed: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	fileSizeExceed: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	typeMissmatch: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	uploadComplete: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	uploadTerminated: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeUploadStarts: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.36.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<UploadCollection xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	fileType=""
	maximumFilenameLength=""
	maximumFileSize=""
	mimeType=""
	multiple="false"
	noDataText=""
	noDataDescription=""
	sameFilenameAllowed="false"
	showSeparators="All"
	uploadEnabled="true"
	uploadUrl="../../../upload"
	instantUpload="true"
	numberOfAttachmentsText=""
	mode="None"
	uploadButtonInvisible="false"
	terminationEnabled="true"
	validateFieldGroup=""
	change=""
	fileDeleted=""
	filenameLengthExceed=""
	fileRenamed=""
	fileSizeExceed=""
	typeMissmatch=""
	uploadComplete=""
	uploadTerminated=""
	beforeUploadStarts=""
	selectionChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.UploadCollectionItem -->
		<headerParameters></headerParameters> <!-- sap.m.UploadCollectionParameter -->
		<parameters></parameters> <!-- sap.m.UploadCollectionParameter -->
		<toolbar></toolbar> <!-- sap.m.OverflowToolbar, since 1.34.0 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.44.0 -->
</UploadCollection>
]]></xmlTemplate>
</Template>
<Template name="sap.m.UploadCollectionItem" alias="UploadCollectionItem,Item">
	<jsTemplate><![CDATA[new sap.m.UploadCollectionItem({
	id: "${id}", // sap.ui.core.ID
	contributor: undefined, // string
	documentId: undefined, // string
	fileName: undefined, // string
	fileSize: undefined, // float
	mimeType: undefined, // string
	thumbnailUrl: undefined, // string
	uploadedDate: undefined, // string
	url: undefined, // string
	enableEdit: true, // boolean
	enableDelete: true, // boolean
	visibleEdit: true, // boolean
	visibleDelete: true, // boolean
	ariaLabelForPicture: undefined, // string, since 1.30.0
	selected: false, // boolean, since 1.34.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	attributes: [], // sap.m.ObjectAttribute, since 1.30.0
	statuses: [], // sap.m.ObjectStatus, since 1.30.0
	markers: [], // sap.m.ObjectMarker, since 1.40.0
	fileUploader: undefined, // sap.ui.unified.FileUploader, since 1.30.0
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.50.0
	deletePress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.50.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<UploadCollectionItem xmlns="sap.m"
	id="${id}"
	contributor=""
	documentId=""
	fileName=""
	fileSize=""
	mimeType=""
	thumbnailUrl=""
	uploadedDate=""
	url=""
	enableEdit="true"
	enableDelete="true"
	visibleEdit="true"
	visibleDelete="true"
	ariaLabelForPicture=""
	selected="false"
	fileUploader=""
	press=""
	deletePress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<attributes></attributes> <!-- sap.m.ObjectAttribute, since 1.30.0 -->
		<statuses></statuses> <!-- sap.m.ObjectStatus, since 1.30.0 -->
		<markers></markers> <!-- sap.m.ObjectMarker, since 1.40.0 -->
</UploadCollectionItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.UploadCollectionParameter" alias="UploadCollectionParameter,Parameter">
	<jsTemplate><![CDATA[new sap.m.UploadCollectionParameter({
	id: "${id}", // sap.ui.core.ID
	name: undefined, // string, since 1.12.2
	value: undefined, // string, since 1.12.2
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<UploadCollectionParameter xmlns="sap.m"
	id="${id}"
	name=""
	value="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</UploadCollectionParameter>
]]></xmlTemplate>
</Template>
<Template name="sap.m.UploadCollectionToolbarPlaceholder" alias="UploadCollectionToolbarPlaceholder,Placeholder">
	<jsTemplate><![CDATA[new sap.m.UploadCollectionToolbarPlaceholder({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<UploadCollectionToolbarPlaceholder xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</UploadCollectionToolbarPlaceholder>
]]></xmlTemplate>
</Template>
<Template name="sap.m.VBox" alias="VBox">
	<jsTemplate><![CDATA[new sap.m.VBox({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	height: "", // sap.ui.core.CSSSize, since 1.9.1
	width: "", // sap.ui.core.CSSSize, since 1.9.1
	displayInline: false, // boolean
	direction: sap.m.FlexDirection.Row, // sap.m.FlexDirection
	fitContainer: false, // boolean
	renderType: sap.m.FlexRendertype.Div, // sap.m.FlexRendertype
	justifyContent: sap.m.FlexJustifyContent.Start, // sap.m.FlexJustifyContent
	alignItems: sap.m.FlexAlignItems.Stretch, // sap.m.FlexAlignItems
	wrap: sap.m.FlexWrap.NoWrap, // sap.m.FlexWrap, since 1.36.0
	alignContent: sap.m.FlexAlignContent.Stretch, // sap.m.FlexAlignContent, since 1.36.0
	backgroundDesign: sap.m.BackgroundDesign.Transparent, // sap.m.BackgroundDesign, since 1.38.5
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Control
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<VBox xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	height=""
	width=""
	displayInline="false"
	direction="Row"
	fitContainer="false"
	renderType="Div"
	justifyContent="Start"
	alignItems="Stretch"
	wrap="NoWrap"
	alignContent="Stretch"
	backgroundDesign="Transparent"
	validateFieldGroup="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Control -->
</VBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ViewSettingsCustomItem" alias="ViewSettingsCustomItem,Item">
	<jsTemplate><![CDATA[new sap.m.ViewSettingsCustomItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	selected: false, // boolean
	filterCount: 0, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	customControl: undefined, // sap.ui.core.Control
	itemPropertyChanged: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ViewSettingsCustomItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	selected="false"
	filterCount="0"
	itemPropertyChanged="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<customControl></customControl> <!-- sap.ui.core.Control -->
</ViewSettingsCustomItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ViewSettingsCustomTab" alias="ViewSettingsCustomTab,Tab">
	<jsTemplate><![CDATA[new sap.m.ViewSettingsCustomTab({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	icon: "sap-icon://competitor", // sap.ui.core.URI
	title: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [] // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ViewSettingsCustomTab xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	icon="sap-icon://competitor"
	title="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</ViewSettingsCustomTab>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ViewSettingsDialog" alias="ViewSettingsDialog,Dialog">
	<jsTemplate><![CDATA[new sap.m.ViewSettingsDialog({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	sortDescending: false, // boolean
	groupDescending: false, // boolean
	filterSearchOperator: sap.m.StringFilterOperator.StartsWith, // sap.m.StringFilterOperator, since 1.42
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	sortItems: [], // sap.m.ViewSettingsItem, since 1.16
	groupItems: [], // sap.m.ViewSettingsItem, since 1.16
	filterItems: [], // sap.m.ViewSettingsItem, since 1.16
	presetFilterItems: [], // sap.m.ViewSettingsItem, since 1.16
	customTabs: [], // sap.m.ViewSettingsCustomTab, since 1.30
	selectedSortItem: undefined, // sap.m.ViewSettingsItem
	selectedGroupItem: undefined, // sap.m.ViewSettingsItem
	selectedPresetFilterItem: undefined, // sap.m.ViewSettingsItem
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	confirm: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	cancel: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	resetFilters: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	filterDetailPageOpened: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ViewSettingsDialog xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	sortDescending="false"
	groupDescending="false"
	filterSearchOperator="StartsWith"
	selectedSortItem=""
	selectedGroupItem=""
	selectedPresetFilterItem=""
	validateFieldGroup=""
	confirm=""
	cancel=""
	resetFilters=""
	filterDetailPageOpened="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<sortItems></sortItems> <!-- sap.m.ViewSettingsItem, since 1.16 -->
		<groupItems></groupItems> <!-- sap.m.ViewSettingsItem, since 1.16 -->
		<filterItems></filterItems> <!-- sap.m.ViewSettingsItem, since 1.16 -->
		<presetFilterItems></presetFilterItems> <!-- sap.m.ViewSettingsItem, since 1.16 -->
		<customTabs></customTabs> <!-- sap.m.ViewSettingsCustomTab, since 1.30 -->
</ViewSettingsDialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ViewSettingsFilterItem" alias="ViewSettingsFilterItem,Item">
	<jsTemplate><![CDATA[new sap.m.ViewSettingsFilterItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	selected: false, // boolean
	multiSelect: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.m.ViewSettingsItem
	itemPropertyChanged: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	filterDetailItemsAggregationChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ViewSettingsFilterItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	selected="false"
	multiSelect="true"
	itemPropertyChanged=""
	filterDetailItemsAggregationChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.m.ViewSettingsItem -->
</ViewSettingsFilterItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ViewSettingsItem" alias="ViewSettingsItem,Item">
	<jsTemplate><![CDATA[new sap.m.ViewSettingsItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	selected: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	itemPropertyChanged: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ViewSettingsItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	selected="false"
	itemPropertyChanged="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</ViewSettingsItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Wizard" alias="Wizard">
	<jsTemplate><![CDATA[new sap.m.Wizard({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	width: "auto", // sap.ui.core.CSSSize
	height: "100%", // sap.ui.core.CSSSize
	showNextButton: true, // boolean
	finishButtonText: "Review", // string
	enableBranching: false, // boolean, since 1.32
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	steps: [], // sap.m.WizardStep
	currentStep: undefined, // sap.m.WizardStep, since 1.50
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	stepActivate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	complete: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Wizard xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	width="auto"
	height="100%"
	showNextButton="true"
	finishButtonText="Review"
	enableBranching="false"
	currentStep=""
	validateFieldGroup=""
	stepActivate=""
	complete="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<steps></steps> <!-- sap.m.WizardStep -->
</Wizard>
]]></xmlTemplate>
</Template>
<Template name="sap.m.WizardStep" alias="WizardStep,Step">
	<jsTemplate><![CDATA[new sap.m.WizardStep({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: "", // string
	icon: "", // sap.ui.core.URI
	validated: true, // boolean, since 1.32
	optional: false, // boolean, since 1.54
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	content: [], // sap.ui.core.Control
	subsequentSteps: [], // sap.m.WizardStep, since 1.32
	nextStep: undefined, // sap.m.WizardStep, since 1.32
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	complete: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	activate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<WizardStep xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	icon=""
	validated="true"
	optional="false"
	subsequentSteps=""
	nextStep=""
	validateFieldGroup=""
	complete=""
	activate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<content></content> <!-- sap.ui.core.Control -->
</WizardStep>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.AddAction" alias="AddAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.AddAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/AddAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/AddAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.CancelAction" alias="CancelAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.CancelAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/CancelAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/CancelAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.DeleteAction" alias="DeleteAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.DeleteAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/DeleteAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/DeleteAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.DetailPage" alias="DetailPage,Page">
	<jsTemplate><![CDATA[new sap.m.semantic.DetailPage({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showSubHeader: true, // boolean
	enableScrolling: true, // boolean
	showFooter: true, // boolean
	floatingFooter: false, // boolean, since 1.40.1
	semanticRuleSet: sap.m.semantic.SemanticRuleSetType.Classic, // sap.m.semantic.SemanticRuleSetType, since 1.44
	backgroundDesign: sap.m.PageBackgroundDesign.Standard, // sap.m.PageBackgroundDesign, since 1.52
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	subHeader: undefined, // sap.m.IBar
	content: [], // sap.ui.core.Control
	customHeaderContent: [], // sap.m.Button
	customFooterContent: [], // sap.m.Button
	landmarkInfo: undefined, // sap.m.PageAccessibleLandmarkInfo
	customShareMenuContent: [], // sap.m.Button
	addAction: undefined, // sap.m.semantic.AddAction
	mainAction: undefined, // sap.m.semantic.MainAction
	positiveAction: undefined, // sap.m.semantic.PositiveAction
	negativeAction: undefined, // sap.m.semantic.NegativeAction
	forwardAction: undefined, // sap.m.semantic.ForwardAction
	editAction: undefined, // sap.m.semantic.EditAction
	saveAction: undefined, // sap.m.semantic.SaveAction
	deleteAction: undefined, // sap.m.semantic.DeleteAction
	cancelAction: undefined, // sap.m.semantic.CancelAction
	flagAction: undefined, // sap.m.semantic.FlagAction
	favoriteAction: undefined, // sap.m.semantic.FavoriteAction
	openInAction: undefined, // sap.m.semantic.OpenInAction
	discussInJamAction: undefined, // sap.m.semantic.DiscussInJamAction
	shareInJamAction: undefined, // sap.m.semantic.ShareInJamAction
	sendEmailAction: undefined, // sap.m.semantic.SendEmailAction
	sendMessageAction: undefined, // sap.m.semantic.SendMessageAction
	printAction: undefined, // sap.m.semantic.PrintAction
	messagesIndicator: undefined, // sap.m.semantic.MessagesIndicator
	saveAsTileAction: undefined, // sap.m.Button
	pagingAction: undefined, // sap.m.PagingButton
	draftIndicator: undefined, // sap.m.DraftIndicator
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/DetailPage xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showSubHeader="true"
	enableScrolling="true"
	showFooter="true"
	floatingFooter="false"
	semanticRuleSet="Classic"
	backgroundDesign="Standard"
	validateFieldGroup=""
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeaderContent></customHeaderContent> <!-- sap.m.Button -->
		<customFooterContent></customFooterContent> <!-- sap.m.Button -->
		<landmarkInfo></landmarkInfo> <!-- sap.m.PageAccessibleLandmarkInfo -->
		<customShareMenuContent></customShareMenuContent> <!-- sap.m.Button -->
		<addAction></addAction> <!-- sap.m.semantic.AddAction -->
		<mainAction></mainAction> <!-- sap.m.semantic.MainAction -->
		<positiveAction></positiveAction> <!-- sap.m.semantic.PositiveAction -->
		<negativeAction></negativeAction> <!-- sap.m.semantic.NegativeAction -->
		<forwardAction></forwardAction> <!-- sap.m.semantic.ForwardAction -->
		<editAction></editAction> <!-- sap.m.semantic.EditAction -->
		<saveAction></saveAction> <!-- sap.m.semantic.SaveAction -->
		<deleteAction></deleteAction> <!-- sap.m.semantic.DeleteAction -->
		<cancelAction></cancelAction> <!-- sap.m.semantic.CancelAction -->
		<flagAction></flagAction> <!-- sap.m.semantic.FlagAction -->
		<favoriteAction></favoriteAction> <!-- sap.m.semantic.FavoriteAction -->
		<openInAction></openInAction> <!-- sap.m.semantic.OpenInAction -->
		<discussInJamAction></discussInJamAction> <!-- sap.m.semantic.DiscussInJamAction -->
		<shareInJamAction></shareInJamAction> <!-- sap.m.semantic.ShareInJamAction -->
		<sendEmailAction></sendEmailAction> <!-- sap.m.semantic.SendEmailAction -->
		<sendMessageAction></sendMessageAction> <!-- sap.m.semantic.SendMessageAction -->
		<printAction></printAction> <!-- sap.m.semantic.PrintAction -->
		<messagesIndicator></messagesIndicator> <!-- sap.m.semantic.MessagesIndicator -->
		<saveAsTileAction></saveAsTileAction> <!-- sap.m.Button -->
		<pagingAction></pagingAction> <!-- sap.m.PagingButton -->
		<draftIndicator></draftIndicator> <!-- sap.m.DraftIndicator -->
</semantic/DetailPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.DiscussInJamAction" alias="DiscussInJamAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.DiscussInJamAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/DiscussInJamAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/DiscussInJamAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.EditAction" alias="EditAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.EditAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/EditAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/EditAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.FavoriteAction" alias="FavoriteAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.FavoriteAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/FavoriteAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	pressed="false"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/FavoriteAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.FilterAction" alias="FilterAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.FilterAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/FilterAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/FilterAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.FilterSelect" alias="FilterSelect,Select">
	<jsTemplate><![CDATA[new sap.m.semantic.FilterSelect({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	selectedKey: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/FilterSelect xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	selectedKey=""
	selectedItem=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Item -->
</semantic/FilterSelect>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.FlagAction" alias="FlagAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.FlagAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/FlagAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	pressed="false"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/FlagAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.ForwardAction" alias="ForwardAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.ForwardAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/ForwardAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/ForwardAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.FullscreenPage" alias="FullscreenPage,Page">
	<jsTemplate><![CDATA[new sap.m.semantic.FullscreenPage({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showSubHeader: true, // boolean
	enableScrolling: true, // boolean
	showFooter: true, // boolean
	floatingFooter: false, // boolean, since 1.40.1
	semanticRuleSet: sap.m.semantic.SemanticRuleSetType.Classic, // sap.m.semantic.SemanticRuleSetType, since 1.44
	backgroundDesign: sap.m.PageBackgroundDesign.Standard, // sap.m.PageBackgroundDesign, since 1.52
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	subHeader: undefined, // sap.m.IBar
	content: [], // sap.ui.core.Control
	customHeaderContent: [], // sap.m.Button
	customFooterContent: [], // sap.m.Button
	landmarkInfo: undefined, // sap.m.PageAccessibleLandmarkInfo
	customShareMenuContent: [], // sap.m.Button
	addAction: undefined, // sap.m.semantic.AddAction
	mainAction: undefined, // sap.m.semantic.MainAction
	positiveAction: undefined, // sap.m.semantic.PositiveAction
	negativeAction: undefined, // sap.m.semantic.NegativeAction
	forwardAction: undefined, // sap.m.semantic.ForwardAction
	editAction: undefined, // sap.m.semantic.EditAction
	saveAction: undefined, // sap.m.semantic.SaveAction
	deleteAction: undefined, // sap.m.semantic.DeleteAction
	cancelAction: undefined, // sap.m.semantic.CancelAction
	flagAction: undefined, // sap.m.semantic.FlagAction
	favoriteAction: undefined, // sap.m.semantic.FavoriteAction
	openInAction: undefined, // sap.m.semantic.OpenInAction
	discussInJamAction: undefined, // sap.m.semantic.DiscussInJamAction
	shareInJamAction: undefined, // sap.m.semantic.ShareInJamAction
	sendEmailAction: undefined, // sap.m.semantic.SendEmailAction
	sendMessageAction: undefined, // sap.m.semantic.SendMessageAction
	printAction: undefined, // sap.m.semantic.PrintAction
	messagesIndicator: undefined, // sap.m.semantic.MessagesIndicator
	saveAsTileAction: undefined, // sap.m.Button
	pagingAction: undefined, // sap.m.PagingButton
	draftIndicator: undefined, // sap.m.DraftIndicator
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/FullscreenPage xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showSubHeader="true"
	enableScrolling="true"
	showFooter="true"
	floatingFooter="false"
	semanticRuleSet="Classic"
	backgroundDesign="Standard"
	validateFieldGroup=""
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeaderContent></customHeaderContent> <!-- sap.m.Button -->
		<customFooterContent></customFooterContent> <!-- sap.m.Button -->
		<landmarkInfo></landmarkInfo> <!-- sap.m.PageAccessibleLandmarkInfo -->
		<customShareMenuContent></customShareMenuContent> <!-- sap.m.Button -->
		<addAction></addAction> <!-- sap.m.semantic.AddAction -->
		<mainAction></mainAction> <!-- sap.m.semantic.MainAction -->
		<positiveAction></positiveAction> <!-- sap.m.semantic.PositiveAction -->
		<negativeAction></negativeAction> <!-- sap.m.semantic.NegativeAction -->
		<forwardAction></forwardAction> <!-- sap.m.semantic.ForwardAction -->
		<editAction></editAction> <!-- sap.m.semantic.EditAction -->
		<saveAction></saveAction> <!-- sap.m.semantic.SaveAction -->
		<deleteAction></deleteAction> <!-- sap.m.semantic.DeleteAction -->
		<cancelAction></cancelAction> <!-- sap.m.semantic.CancelAction -->
		<flagAction></flagAction> <!-- sap.m.semantic.FlagAction -->
		<favoriteAction></favoriteAction> <!-- sap.m.semantic.FavoriteAction -->
		<openInAction></openInAction> <!-- sap.m.semantic.OpenInAction -->
		<discussInJamAction></discussInJamAction> <!-- sap.m.semantic.DiscussInJamAction -->
		<shareInJamAction></shareInJamAction> <!-- sap.m.semantic.ShareInJamAction -->
		<sendEmailAction></sendEmailAction> <!-- sap.m.semantic.SendEmailAction -->
		<sendMessageAction></sendMessageAction> <!-- sap.m.semantic.SendMessageAction -->
		<printAction></printAction> <!-- sap.m.semantic.PrintAction -->
		<messagesIndicator></messagesIndicator> <!-- sap.m.semantic.MessagesIndicator -->
		<saveAsTileAction></saveAsTileAction> <!-- sap.m.Button -->
		<pagingAction></pagingAction> <!-- sap.m.PagingButton -->
		<draftIndicator></draftIndicator> <!-- sap.m.DraftIndicator -->
</semantic/FullscreenPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.GroupAction" alias="GroupAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.GroupAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/GroupAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/GroupAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.GroupSelect" alias="GroupSelect,Select">
	<jsTemplate><![CDATA[new sap.m.semantic.GroupSelect({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	selectedKey: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/GroupSelect xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	selectedKey=""
	selectedItem=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Item -->
</semantic/GroupSelect>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.MainAction" alias="MainAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.MainAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	text: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/MainAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	text=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/MainAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.MasterPage" alias="MasterPage,Page">
	<jsTemplate><![CDATA[new sap.m.semantic.MasterPage({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showSubHeader: true, // boolean
	enableScrolling: true, // boolean
	showFooter: true, // boolean
	floatingFooter: false, // boolean, since 1.40.1
	semanticRuleSet: sap.m.semantic.SemanticRuleSetType.Classic, // sap.m.semantic.SemanticRuleSetType, since 1.44
	backgroundDesign: sap.m.PageBackgroundDesign.Standard, // sap.m.PageBackgroundDesign, since 1.52
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	subHeader: undefined, // sap.m.IBar
	content: [], // sap.ui.core.Control
	customHeaderContent: [], // sap.m.Button
	customFooterContent: [], // sap.m.Button
	landmarkInfo: undefined, // sap.m.PageAccessibleLandmarkInfo
	addAction: undefined, // sap.m.semantic.AddAction
	mainAction: undefined, // sap.m.semantic.MainAction
	positiveAction: undefined, // sap.m.semantic.PositiveAction
	negativeAction: undefined, // sap.m.semantic.NegativeAction
	multiSelectAction: undefined, // sap.m.semantic.MultiSelectAction
	forwardAction: undefined, // sap.m.semantic.ForwardAction
	editAction: undefined, // sap.m.semantic.EditAction
	saveAction: undefined, // sap.m.semantic.SaveAction
	deleteAction: undefined, // sap.m.semantic.DeleteAction
	cancelAction: undefined, // sap.m.semantic.CancelAction
	sort: undefined, // sap.m.semantic.ISort
	filter: undefined, // sap.m.semantic.IFilter
	group: undefined, // sap.m.semantic.IGroup
	messagesIndicator: undefined, // sap.m.semantic.MessagesIndicator
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/MasterPage xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showSubHeader="true"
	enableScrolling="true"
	showFooter="true"
	floatingFooter="false"
	semanticRuleSet="Classic"
	backgroundDesign="Standard"
	validateFieldGroup=""
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeaderContent></customHeaderContent> <!-- sap.m.Button -->
		<customFooterContent></customFooterContent> <!-- sap.m.Button -->
		<landmarkInfo></landmarkInfo> <!-- sap.m.PageAccessibleLandmarkInfo -->
		<addAction></addAction> <!-- sap.m.semantic.AddAction -->
		<mainAction></mainAction> <!-- sap.m.semantic.MainAction -->
		<positiveAction></positiveAction> <!-- sap.m.semantic.PositiveAction -->
		<negativeAction></negativeAction> <!-- sap.m.semantic.NegativeAction -->
		<multiSelectAction></multiSelectAction> <!-- sap.m.semantic.MultiSelectAction -->
		<forwardAction></forwardAction> <!-- sap.m.semantic.ForwardAction -->
		<editAction></editAction> <!-- sap.m.semantic.EditAction -->
		<saveAction></saveAction> <!-- sap.m.semantic.SaveAction -->
		<deleteAction></deleteAction> <!-- sap.m.semantic.DeleteAction -->
		<cancelAction></cancelAction> <!-- sap.m.semantic.CancelAction -->
		<sort></sort> <!-- sap.m.semantic.ISort -->
		<filter></filter> <!-- sap.m.semantic.IFilter -->
		<group></group> <!-- sap.m.semantic.IGroup -->
		<messagesIndicator></messagesIndicator> <!-- sap.m.semantic.MessagesIndicator -->
</semantic/MasterPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.MessagesIndicator" alias="MessagesIndicator,Indicator">
	<jsTemplate><![CDATA[new sap.m.semantic.MessagesIndicator({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/MessagesIndicator xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/MessagesIndicator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.MultiSelectAction" alias="MultiSelectAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.MultiSelectAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/MultiSelectAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	pressed="false"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/MultiSelectAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.NegativeAction" alias="NegativeAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.NegativeAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	text: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/NegativeAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	text=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/NegativeAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.OpenInAction" alias="OpenInAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.OpenInAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/OpenInAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/OpenInAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.PositiveAction" alias="PositiveAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.PositiveAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	text: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/PositiveAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	text=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/PositiveAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.PrintAction" alias="PrintAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.PrintAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/PrintAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/PrintAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SaveAction" alias="SaveAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.SaveAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SaveAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/SaveAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SemanticButton" alias="SemanticButton,Button">
	<jsTemplate><![CDATA[new sap.m.semantic.SemanticButton({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SemanticButton xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/SemanticButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SemanticControl" alias="SemanticControl,Control">
	<jsTemplate><![CDATA[new sap.m.semantic.SemanticControl({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [] // sap.ui.core.dnd.DragDropBase, since 1.56
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SemanticControl xmlns="sap.m"
	id="${id}"
	visible="true">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/SemanticControl>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SemanticPage" alias="SemanticPage,Page">
	<jsTemplate><![CDATA[new sap.m.semantic.SemanticPage({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showSubHeader: true, // boolean
	enableScrolling: true, // boolean
	showFooter: true, // boolean
	floatingFooter: false, // boolean, since 1.40.1
	semanticRuleSet: sap.m.semantic.SemanticRuleSetType.Classic, // sap.m.semantic.SemanticRuleSetType, since 1.44
	backgroundDesign: sap.m.PageBackgroundDesign.Standard, // sap.m.PageBackgroundDesign, since 1.52
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	subHeader: undefined, // sap.m.IBar
	content: [], // sap.ui.core.Control
	customHeaderContent: [], // sap.m.Button
	customFooterContent: [], // sap.m.Button
	landmarkInfo: undefined, // sap.m.PageAccessibleLandmarkInfo
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SemanticPage xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showSubHeader="true"
	enableScrolling="true"
	showFooter="true"
	floatingFooter="false"
	semanticRuleSet="Classic"
	backgroundDesign="Standard"
	validateFieldGroup=""
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeaderContent></customHeaderContent> <!-- sap.m.Button -->
		<customFooterContent></customFooterContent> <!-- sap.m.Button -->
		<landmarkInfo></landmarkInfo> <!-- sap.m.PageAccessibleLandmarkInfo -->
</semantic/SemanticPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SemanticSelect" alias="SemanticSelect,Select">
	<jsTemplate><![CDATA[new sap.m.semantic.SemanticSelect({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	selectedKey: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SemanticSelect xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	selectedKey=""
	selectedItem=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Item -->
</semantic/SemanticSelect>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SemanticToggleButton" alias="SemanticToggleButton,Button">
	<jsTemplate><![CDATA[new sap.m.semantic.SemanticToggleButton({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SemanticToggleButton xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	pressed="false"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/SemanticToggleButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SendEmailAction" alias="SendEmailAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.SendEmailAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SendEmailAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/SendEmailAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SendMessageAction" alias="SendMessageAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.SendMessageAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SendMessageAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/SendMessageAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.ShareInJamAction" alias="ShareInJamAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.ShareInJamAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/ShareInJamAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/ShareInJamAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.ShareMenuPage" alias="ShareMenuPage,Page">
	<jsTemplate><![CDATA[new sap.m.semantic.ShareMenuPage({
	id: "${id}", // sap.ui.core.ID
	blocked: false, // boolean
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	busyIndicatorSize: sap.ui.core.BusyIndicatorSize.Medium, // sap.ui.core.BusyIndicatorSize, since 1.54
	visible: true, // boolean
	fieldGroupIds: [], // string[], since 1.31
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showSubHeader: true, // boolean
	enableScrolling: true, // boolean
	showFooter: true, // boolean
	floatingFooter: false, // boolean, since 1.40.1
	semanticRuleSet: sap.m.semantic.SemanticRuleSetType.Classic, // sap.m.semantic.SemanticRuleSetType, since 1.44
	backgroundDesign: sap.m.PageBackgroundDesign.Standard, // sap.m.PageBackgroundDesign, since 1.52
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	subHeader: undefined, // sap.m.IBar
	content: [], // sap.ui.core.Control
	customHeaderContent: [], // sap.m.Button
	customFooterContent: [], // sap.m.Button
	landmarkInfo: undefined, // sap.m.PageAccessibleLandmarkInfo
	customShareMenuContent: [], // sap.m.Button
	validateFieldGroup: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/ShareMenuPage xmlns="sap.m"
	id="${id}"
	blocked="false"
	busy="false"
	busyIndicatorDelay="1000"
	busyIndicatorSize="Medium"
	visible="true"
	fieldGroupIds=""
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showSubHeader="true"
	enableScrolling="true"
	showFooter="true"
	floatingFooter="false"
	semanticRuleSet="Classic"
	backgroundDesign="Standard"
	validateFieldGroup=""
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeaderContent></customHeaderContent> <!-- sap.m.Button -->
		<customFooterContent></customFooterContent> <!-- sap.m.Button -->
		<landmarkInfo></landmarkInfo> <!-- sap.m.PageAccessibleLandmarkInfo -->
		<customShareMenuContent></customShareMenuContent> <!-- sap.m.Button -->
</semantic/ShareMenuPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SortAction" alias="SortAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.SortAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SortAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
</semantic/SortAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SortSelect" alias="SortSelect,Select">
	<jsTemplate><![CDATA[new sap.m.semantic.SortSelect({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	selectedKey: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Element, since 1.19
	dragDropConfig: [], // sap.ui.core.dnd.DragDropBase, since 1.56
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SortSelect xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	selectedKey=""
	selectedItem=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Element, since 1.19 -->
		<dragDropConfig></dragDropConfig> <!-- sap.ui.core.dnd.DragDropBase, since 1.56 -->
		<items></items> <!-- sap.ui.core.Item -->
</semantic/SortSelect>
]]></xmlTemplate>
</Template>
</Library>
