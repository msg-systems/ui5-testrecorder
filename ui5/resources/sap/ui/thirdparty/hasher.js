/*!!
 * Hasher <http://github.com/millermedeiros/hasher>
 * @author Miller Medeiros
 * @version 1.2.0 (2013/11/11 03:18 PM)
 * Released under the MIT License
 */
;(function(){var f=function(s){var h=(function(w){var P=25,d=w.document,a=w.history,S=s.Signal,h,_,b,c,g,i,j=/#(.*)$/,k=/(\?.*)|(\#.*)/,l=/^\#/,m=(!+"\v1"),n=('onhashchange'in w)&&d.documentMode!==7,o=m&&!n,p=(location.protocol==='file:');function q(e){return String(e||'').replace(/\W/g,"\\$&");}function r(e){if(!e)return'';var D=new RegExp('^'+q(h.prependHash)+'|'+q(h.appendHash)+'$','g');return e.replace(D,'');}function t(){var D=j.exec(h.getURL());var E=(D&&D[1])||'';try{return h.raw?E:decodeURIComponent(E);}catch(e){return E;}}function u(){return(g)?g.contentWindow.frameHash:null;}function v(){g=d.createElement('iframe');g.src='about:blank';g.style.display='none';d.body.appendChild(g);}function x(){if(g&&_!==u()){var e=g.contentWindow.document;e.open();e.write('<html><head><title>'+d.title+'</title><script type="text/javascript">var frameHash="'+_+'";</script></head><body>&nbsp;</body></html>');e.close();}}function y(e,D){if(_!==e){var E=_;_=e;if(o){if(!D){x();}else{g.contentWindow.frameHash=e;}}return function(){h.changed.dispatch(r(e),r(E));};}}if(o){i=function(){var e=t(),D=u(),E;if(D!==_&&D!==e){h.setHash(r(D));}else if(e!==_){E=y(e);E&&E();}};}else{i=function(){var e=t(),D;if(e!==_){D=y(e);D&&D();}};}function z(e,D,E){if(e.addEventListener){e.addEventListener(D,E,false);}else if(e.attachEvent){e.attachEvent('on'+D,E);}}function A(e,D,E){if(e.removeEventListener){e.removeEventListener(D,E,false);}else if(e.detachEvent){e.detachEvent('on'+D,E);}}function B(e){e=Array.prototype.slice.call(arguments);var D=e.join(h.separator);D=D?h.prependHash+D.replace(l,'')+h.appendHash:D;return D;}function C(e){e=encodeURI(e);if(m&&p){e=e.replace(/\?/,'%3F');}return e;}h={VERSION:'1.2.0',raw:false,appendHash:'',prependHash:'/',separator:'/',changed:new S(),stopped:new S(),initialized:new S(),init:function(){if(c)return;_=t();if(n){z(w,'hashchange',i);}else{if(o){if(!g){v();}x();}b=setInterval(i,P);}c=true;h.initialized.dispatch(r(_));},stop:function(){if(!c)return;if(n){A(w,'hashchange',i);}else{clearInterval(b);b=null;}c=false;h.stopped.dispatch(r(_));},isActive:function(){return c;},getURL:function(){return w.location.href;},getBaseURL:function(){return h.getURL().replace(k,'');},setHash:function(e){var D;e=B.apply(null,arguments);if(e!==_){D=y(e);if(!h.raw){e=C(e);}w.location.hash='#'+e;D&&D();}},replaceHash:function(e){var D;e=B.apply(null,arguments);if(e!==_){D=y(e);if(!h.raw){e=C(e);}w.location.replace('#'+e);D&&D();}},getHash:function(){return r(_);},getHashAsArray:function(){return h.getHash().split(h.separator);},dispose:function(){h.stop();h.initialized.dispose();h.stopped.dispose();h.changed.dispose();g=h=w.hasher=null;},toString:function(){return'[hasher version="'+h.VERSION+'" hash="'+h.getHash()+'"]';}};h.initialized.memorize=true;return h;}(window));return h;};if(typeof define==='function'&&define.amd){define(['signals'],f);}else if(typeof exports==='object'){module.exports=f(require('signals'));}else{window['hasher']=f(window['signals']);}}());
