ace.define("ace/mode/asciidoc_highlight_rules",["require","exports","module","ace/lib/oop","ace/mode/text_highlight_rules"],function(r,e,m){"use strict";var o=r("../lib/oop");var T=r("./text_highlight_rules").TextHighlightRules;var A=function(){var a="[a-zA-Z\u00a1-\uffff]+\\b";this.$rules={"start":[{token:"empty",regex:/$/},{token:"literal",regex:/^\.{4,}\s*$/,next:"listingBlock"},{token:"literal",regex:/^-{4,}\s*$/,next:"literalBlock"},{token:"string",regex:/^\+{4,}\s*$/,next:"passthroughBlock"},{token:"keyword",regex:/^={4,}\s*$/},{token:"text",regex:/^\s*$/},{token:"empty",regex:"",next:"dissallowDelimitedBlock"}],"dissallowDelimitedBlock":[{include:"paragraphEnd"},{token:"comment",regex:'^//.+$'},{token:"keyword",regex:"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):"},{include:"listStart"},{token:"literal",regex:/^\s+.+$/,next:"indentedBlock"},{token:"empty",regex:"",next:"text"}],"paragraphEnd":[{token:"doc.comment",regex:/^\/{4,}\s*$/,next:"commentBlock"},{token:"tableBlock",regex:/^\s*[|!]=+\s*$/,next:"tableBlock"},{token:"keyword",regex:/^(?:--|''')\s*$/,next:"start"},{token:"option",regex:/^\[.*\]\s*$/,next:"start"},{token:"pageBreak",regex:/^>{3,}$/,next:"start"},{token:"literal",regex:/^\.{4,}\s*$/,next:"listingBlock"},{token:"titleUnderline",regex:/^(?:={2,}|-{2,}|~{2,}|\^{2,}|\+{2,})\s*$/,next:"start"},{token:"singleLineTitle",regex:/^={1,5}\s+\S.*$/,next:"start"},{token:"otherBlock",regex:/^(?:\*{2,}|_{2,})\s*$/,next:"start"},{token:"optionalTitle",regex:/^\.[^.\s].+$/,next:"start"}],"listStart":[{token:"keyword",regex:/^\s*(?:\d+\.|[a-zA-Z]\.|[ixvmIXVM]+\)|\*{1,5}|-|\.{1,5})\s/,next:"listText"},{token:"meta.tag",regex:/^.+(?::{2,4}|;;)(?: |$)/,next:"listText"},{token:"support.function.list.callout",regex:/^(?:<\d+>|\d+>|>) /,next:"text"},{token:"keyword",regex:/^\+\s*$/,next:"start"}],"text":[{token:["link","variable.language"],regex:/((?:https?:\/\/|ftp:\/\/|file:\/\/|mailto:|callto:)[^\s\[]+)(\[.*?\])/},{token:"link",regex:/(?:https?:\/\/|ftp:\/\/|file:\/\/|mailto:|callto:)[^\s\[]+/},{token:"link",regex:/\b[\w\.\/\-]+@[\w\.\/\-]+\b/},{include:"macros"},{include:"paragraphEnd"},{token:"literal",regex:/\+{3,}/,next:"smallPassthrough"},{token:"escape",regex:/\((?:C|TM|R)\)|\.{3}|->|<-|=>|<=|&#(?:\d+|x[a-fA-F\d]+);|(?: |^)--(?=\s+\S)/},{token:"escape",regex:/\\[_*'`+#]|\\{2}[_*'`+#]{2}/},{token:"keyword",regex:/\s\+$/},{token:"text",regex:a},{token:["keyword","string","keyword"],regex:/(<<[\w\d\-$]+,)(.*?)(>>|$)/},{token:"keyword",regex:/<<[\w\d\-$]+,?|>>/},{token:"constant.character",regex:/\({2,3}.*?\){2,3}/},{token:"keyword",regex:/\[\[.+?\]\]/},{token:"support",regex:/^\[{3}[\w\d =\-]+\]{3}/},{include:"quotes"},{token:"empty",regex:/^\s*$/,next:"start"}],"listText":[{include:"listStart"},{include:"text"}],"indentedBlock":[{token:"literal",regex:/^[\s\w].+$/,next:"indentedBlock"},{token:"literal",regex:"",next:"start"}],"listingBlock":[{token:"literal",regex:/^\.{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"constant.numeric",regex:'<\\d+>'},{token:"literal",regex:'[^<]+'},{token:"literal",regex:'<'}],"literalBlock":[{token:"literal",regex:/^-{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"constant.numeric",regex:'<\\d+>'},{token:"literal",regex:'[^<]+'},{token:"literal",regex:'<'}],"passthroughBlock":[{token:"literal",regex:/^\+{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"literal",regex:a+"|\\d+"},{include:"macros"},{token:"literal",regex:"."}],"smallPassthrough":[{token:"literal",regex:/[+]{3,}/,next:"dissallowDelimitedBlock"},{token:"literal",regex:/^\s*$/,next:"dissallowDelimitedBlock"},{token:"literal",regex:a+"|\\d+"},{include:"macros"}],"commentBlock":[{token:"doc.comment",regex:/^\/{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"doc.comment",regex:'^.*$'}],"tableBlock":[{token:"tableBlock",regex:/^\s*\|={3,}\s*$/,next:"dissallowDelimitedBlock"},{token:"tableBlock",regex:/^\s*!={3,}\s*$/,next:"innerTableBlock"},{token:"tableBlock",regex:/\|/},{include:"text",noEscape:true}],"innerTableBlock":[{token:"tableBlock",regex:/^\s*!={3,}\s*$/,next:"tableBlock"},{token:"tableBlock",regex:/^\s*|={3,}\s*$/,next:"dissallowDelimitedBlock"},{token:"tableBlock",regex:/!/}],"macros":[{token:"macro",regex:/{[\w\-$]+}/},{token:["text","string","text","constant.character","text"],regex:/({)([\w\-$]+)(:)?(.+)?(})/},{token:["text","markup.list.macro","keyword","string"],regex:/(\w+)(footnote(?:ref)?::?)([^\s\[]+)?(\[.*?\])?/},{token:["markup.list.macro","keyword","string"],regex:/([a-zA-Z\-][\w\.\/\-]*::?)([^\s\[]+)(\[.*?\])?/},{token:["markup.list.macro","keyword"],regex:/([a-zA-Z\-][\w\.\/\-]+::?)(\[.*?\])/},{token:"keyword",regex:/^:.+?:(?= |$)/}],"quotes":[{token:"string.italic",regex:/__[^_\s].*?__/},{token:"string.italic",regex:q("_")},{token:"keyword.bold",regex:/\*\*[^*\s].*?\*\*/},{token:"keyword.bold",regex:q("\\*")},{token:"literal",regex:q("\\+")},{token:"literal",regex:/\+\+[^+\s].*?\+\+/},{token:"literal",regex:/\$\$.+?\$\$/},{token:"literal",regex:q("`")},{token:"keyword",regex:q("^")},{token:"keyword",regex:q("~")},{token:"keyword",regex:/##?/},{token:"keyword",regex:/(?:\B|^)``|\b''/}]};function q(f){var p=/\w/.test(f)?"\\b":"(?:\\B|^)";return p+f+"[^"+f+"].*?"+f+"(?![\\w*])";}var t={macro:"constant.character",tableBlock:"doc.comment",titleUnderline:"markup.heading",singleLineTitle:"markup.heading",pageBreak:"string",option:"string.regexp",otherBlock:"markup.list",literal:"support.function",optionalTitle:"constant.numeric",escape:"constant.language.escape",link:"markup.underline.list"};for(var s in this.$rules){var b=this.$rules[s];for(var i=b.length;i--;){var c=b[i];if(c.include||typeof c=="string"){var d=[i,1].concat(this.$rules[c.include||c]);if(c.noEscape){d=d.filter(function(x){return!x.next;});}b.splice.apply(b,d);}else if(c.token in t){c.token=t[c.token];}}}};o.inherits(A,T);e.AsciidocHighlightRules=A;});ace.define("ace/mode/folding/asciidoc",["require","exports","module","ace/lib/oop","ace/mode/folding/fold_mode","ace/range"],function(r,e,m){"use strict";var o=r("../../lib/oop");var B=r("./fold_mode").FoldMode;var R=r("../../range").Range;var F=e.FoldMode=function(){};o.inherits(F,B);(function(){this.foldingStartMarker=/^(?:\|={10,}|[\.\/=\-~^+]{4,}\s*$|={1,5} )/;this.singleLineHeadingRe=/^={1,5}(?=\s+\S)/;this.getFoldWidget=function(s,f,a){var l=s.getLine(a);if(!this.foldingStartMarker.test(l))return"";if(l[0]=="="){if(this.singleLineHeadingRe.test(l))return"start";if(s.getLine(a-1).length!=s.getLine(a).length)return"";return"start";}if(s.bgTokenizer.getState(a)=="dissallowDelimitedBlock")return"end";return"start";};this.getFoldWidgetRange=function(s,f,a){var l=s.getLine(a);var b=l.length;var c=s.getLength();var d=a;var g=a;if(!l.match(this.foldingStartMarker))return;var t;function h(a){t=s.getTokens(a)[0];return t&&t.type;}var i=["=","-","~","^","+"];var j="markup.heading";var k=this.singleLineHeadingRe;function n(){var x=t.value.match(k);if(x)return x[0].length;var q=i.indexOf(t.value[0])+1;if(q==1){if(s.getLine(a-1).length!=s.getLine(a).length)return Infinity;}return q;}if(h(a)==j){var p=n();while(++a<c){if(h(a)!=j)continue;var q=n();if(q<=p)break;}var u=t&&t.value.match(this.singleLineHeadingRe);g=u?a-1:a-2;if(g>d){while(g>d&&(!h(g)||t.value[0]=="["))g--;}if(g>d){var v=s.getLine(g).length;return new R(d,b,g,v);}}else{var w=s.bgTokenizer.getState(a);if(w=="dissallowDelimitedBlock"){while(a-->0){if(s.bgTokenizer.getState(a).lastIndexOf("Block")==-1)break;}g=a+1;if(g<d){var v=s.getLine(a).length;return new R(g,5,d,b-5);}}else{while(++a<c){if(s.bgTokenizer.getState(a)=="dissallowDelimitedBlock")break;}g=a;if(g>d){var v=s.getLine(a).length;return new R(d,5,g,v-5);}}}};}).call(F.prototype);});ace.define("ace/mode/asciidoc",["require","exports","module","ace/lib/oop","ace/mode/text","ace/mode/asciidoc_highlight_rules","ace/mode/folding/asciidoc"],function(r,e,m){"use strict";var o=r("../lib/oop");var T=r("./text").Mode;var A=r("./asciidoc_highlight_rules").AsciidocHighlightRules;var a=r("./folding/asciidoc").FoldMode;var M=function(){this.HighlightRules=A;this.foldingRules=new a();};o.inherits(M,T);(function(){this.type="text";this.getNextLineIndent=function(s,l,t){if(s=="listblock"){var b=/^((?:.+)?)([-+*][ ]+)/.exec(l);if(b){return new Array(b[1].length+1).join(" ")+b[2];}else{return"";}}else{return this.$getIndent(l);}};this.$id="ace/mode/asciidoc";}).call(M.prototype);e.Mode=M;});
