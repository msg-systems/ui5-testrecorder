ace.define("ace/mode/io_highlight_rules",["require","exports","module","ace/lib/oop","ace/mode/text_highlight_rules"],function(r,e,m){"use strict";var o=r("../lib/oop");var T=r("./text_highlight_rules").TextHighlightRules;var I=function(){this.$rules={start:[{token:['text','meta.empty-parenthesis.io'],regex:'(\\()(\\))',comment:'we match this to overload return inside () --Allan; scoping rules for what gets the scope have changed, so we now group the ) instead of the ( -- Rob'},{token:['text','meta.comma-parenthesis.io'],regex:'(\\,)(\\))',comment:'We want to do the same for ,) -- Seckar; same as above -- Rob'},{token:'keyword.control.io',regex:'\\b(?:if|ifTrue|ifFalse|ifTrueIfFalse|for|loop|reverseForeach|foreach|map|continue|break|while|do|return)\\b'},{token:'punctuation.definition.comment.io',regex:'/\\*',push:[{token:'punctuation.definition.comment.io',regex:'\\*/',next:'pop'},{defaultToken:'comment.block.io'}]},{token:'punctuation.definition.comment.io',regex:'//',push:[{token:'comment.line.double-slash.io',regex:'$',next:'pop'},{defaultToken:'comment.line.double-slash.io'}]},{token:'punctuation.definition.comment.io',regex:'#',push:[{token:'comment.line.number-sign.io',regex:'$',next:'pop'},{defaultToken:'comment.line.number-sign.io'}]},{token:'variable.language.io',regex:'\\b(?:self|sender|target|proto|protos|parent)\\b',comment:'I wonder if some of this isn\'t variable.other.language? --Allan; scoping this as variable.language to match Objective-C\'s handling of \'self\', which is inconsistent with C++\'s handling of \'this\' but perhaps intentionally so -- Rob'},{token:'keyword.operator.io',regex:'<=|>=|=|:=|\\*|\\||\\|\\||\\+|-|/|&|&&|>|<|\\?|@|@@|\\b(?:and|or)\\b'},{token:'constant.other.io',regex:'\\bGL[\\w_]+\\b'},{token:'support.class.io',regex:'\\b[A-Z](?:\\w+)?\\b'},{token:'support.function.io',regex:'\\b(?:clone|call|init|method|list|vector|block|\\w+(?=\\s*\\())\\b'},{token:'support.function.open-gl.io',regex:'\\bgl(?:u|ut)?[A-Z]\\w+\\b'},{token:'punctuation.definition.string.begin.io',regex:'"""',push:[{token:'punctuation.definition.string.end.io',regex:'"""',next:'pop'},{token:'constant.character.escape.io',regex:'\\\\.'},{defaultToken:'string.quoted.triple.io'}]},{token:'punctuation.definition.string.begin.io',regex:'"',push:[{token:'punctuation.definition.string.end.io',regex:'"',next:'pop'},{token:'constant.character.escape.io',regex:'\\\\.'},{defaultToken:'string.quoted.double.io'}]},{token:'constant.numeric.io',regex:'\\b(?:0(?:x|X)[0-9a-fA-F]*|(?:[0-9]+\\.?[0-9]*|\\.[0-9]+)(?:(?:e|E)(?:\\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?\\b'},{token:'variable.other.global.io',regex:'Lobby\\b'},{token:'constant.language.io',regex:'\\b(?:TRUE|true|FALSE|false|NULL|null|Null|Nil|nil|YES|NO)\\b'}]};this.normalizeRules();};I.metaData={fileTypes:['io'],keyEquivalent:'^~I',name:'Io',scopeName:'source.io'};o.inherits(I,T);e.IoHighlightRules=I;});ace.define("ace/mode/folding/cstyle",["require","exports","module","ace/lib/oop","ace/range","ace/mode/folding/fold_mode"],function(r,e,a){"use strict";var o=r("../../lib/oop");var R=r("../../range").Range;var B=r("./fold_mode").FoldMode;var F=e.FoldMode=function(c){if(c){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\|[^|]*?$/,"|"+c.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\|[^|]*?$/,"|"+c.end));}};o.inherits(F,B);(function(){this.foldingStartMarker=/(\{|\[)[^\}\]]*$|^\s*(\/\*)/;this.foldingStopMarker=/^[^\[\{]*(\}|\])|^[\s\*]*(\*\/)/;this.singleLineBlockCommentRe=/^\s*(\/\*).*\*\/\s*$/;this.tripleStarBlockCommentRe=/^\s*(\/\*\*\*).*\*\/\s*$/;this.startRegionRe=/^\s*(\/\*|\/\/)#?region\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(s,f,b){var l=s.getLine(b);if(this.singleLineBlockCommentRe.test(l)){if(!this.startRegionRe.test(l)&&!this.tripleStarBlockCommentRe.test(l))return"";}var c=this._getFoldWidgetBase(s,f,b);if(!c&&this.startRegionRe.test(l))return"start";return c;};this.getFoldWidgetRange=function(s,f,b,c){var l=s.getLine(b);if(this.startRegionRe.test(l))return this.getCommentRegionBlock(s,l,b);var m=l.match(this.foldingStartMarker);if(m){var i=m.index;if(m[1])return this.openingBracketBlock(s,m[1],b,i);var d=s.getCommentFoldRange(b,i+m[0].length,1);if(d&&!d.isMultiLine()){if(c){d=this.getSectionRange(s,b);}else if(f!="all")d=null;}return d;}if(f==="markbegin")return;var m=l.match(this.foldingStopMarker);if(m){var i=m.index+m[0].length;if(m[1])return this.closingBracketBlock(s,m[1],b,i);return s.getCommentFoldRange(b,i,-1);}};this.getSectionRange=function(s,b){var l=s.getLine(b);var c=l.search(/\S/);var d=b;var f=l.length;b=b+1;var g=b;var m=s.getLength();while(++b<m){l=s.getLine(b);var i=l.search(/\S/);if(i===-1)continue;if(c>i)break;var h=this.getFoldWidgetRange(s,"all",b);if(h){if(h.start.row<=d){break;}else if(h.isMultiLine()){b=h.end.row;}else if(c==i){break;}}g=b;}return new R(d,f,g,s.getLine(g).length);};this.getCommentRegionBlock=function(s,l,b){var c=l.search(/\s*$/);var d=s.getLength();var f=b;var g=/^\s*(?:\/\*|\/\/|--)#?(end)?region\b/;var h=1;while(++b<d){l=s.getLine(b);var m=g.exec(l);if(!m)continue;if(m[1])h--;else h++;if(!h)break;}var i=b;if(i>f){return new R(f,c,i,l.length);}};}).call(F.prototype);});ace.define("ace/mode/io",["require","exports","module","ace/lib/oop","ace/mode/text","ace/mode/io_highlight_rules","ace/mode/folding/cstyle"],function(r,e,m){"use strict";var o=r("../lib/oop");var T=r("./text").Mode;var I=r("./io_highlight_rules").IoHighlightRules;var F=r("./folding/cstyle").FoldMode;var M=function(){this.HighlightRules=I;this.foldingRules=new F();this.$behaviour=this.$defaultBehaviour;};o.inherits(M,T);(function(){this.lineCommentStart="//";this.blockComment={start:"/*",end:"*/"};this.$id="ace/mode/io";}).call(M.prototype);e.Mode=M;});
